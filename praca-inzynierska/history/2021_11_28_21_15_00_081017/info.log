2021-11-28 21:15:00,081 INFO - statictics.__init__() : Statistics initialized
2021-11-28 21:15:00,084 INFO - statictics.__init__() : Added link to history
2021-11-28 21:15:00,090 INFO - statictics.__init__() : History send to GIT
2021-11-28 21:15:06,430 INFO - data.__prepare() : Data prepared
2021-11-28 21:15:06,535 INFO - data.__augment() : Data augmented
2021-11-28 21:15:13,936 INFO - data.__copy() : Data copied
2021-11-28 21:15:20,916 INFO - data.__read() : Data prepared for algorithms
2021-11-28 21:15:21,168 INFO - data.__preprocess() : Data prepared for neural networks
2021-11-28 21:15:21,168 INFO - discrete_nbc.__init__() : Algorithm initialized
2021-11-28 21:15:45,550 INFO - discrete_nbc.start() : Training started
2021-11-28 21:27:12,165 INFO - discrete_nbc.start() : Training completed
2021-11-28 21:27:12,165 INFO - discrete_nbc.start() : Prediction started
2021-11-28 21:33:36,990 INFO - discrete_nbc.start() : Prediction completed
2021-11-28 21:39:37,810 INFO - discrete_nbc.start() : Prediction results: method: DiscreteNBC, description: DiscreteNBC,  train_time: 686.6142339706421, predict_time: 384.8234553337097,  true_positive: 200, true_negative: 170, false_positive: 80, false_negative: 50, sensitivity: 0.8,  specificity: 0.68, precision: 0.7142857142857143,  accuracy: 0.74,  error: 0.26, f1: 0.7547169811320756, myScore1: 1.0554024466099938, myScore2: 0.0010991863317012817, myScore3: 0.0019612031716663503
2021-11-28 21:39:43,725 INFO - statictics.insert() : History send to GIT
2021-11-28 21:39:43,727 INFO - real_boost.__init__() : Algorithm initialized
2021-11-28 21:39:43,727 INFO - real_boost.start() : Training started
2021-11-28 23:19:35,094 INFO - real_boost.start() : Training completed
2021-11-28 23:19:35,096 INFO - real_boost.start() : Prediction started
2021-11-28 23:19:36,070 INFO - real_boost.start() : Prediction completed
2021-11-28 23:19:36,862 INFO - real_boost.start() : Prediction results: method: RealBoost, description: An RealBoost classifier,  train_time: 5991.366187334061, predict_time: 0.9732990264892578,  true_positive: 207, true_negative: 203, false_positive: 47, false_negative: 43, sensitivity: 0.828,  specificity: 0.812, precision: 0.8149606299212598,  accuracy: 0.82,  error: 0.18000000000000005, f1: 0.8214285714285714, myScore1: 1.2937659042619671, myScore2: 0.00013710204747042462, myScore3: 0.8439632107632006
2021-11-28 23:19:39,963 INFO - statictics.insert() : History send to GIT
2021-11-28 23:19:39,976 INFO - bernoulli_nbc.__init__() : Algorithm initialized
2021-11-28 23:19:39,977 INFO - bernoulli_nbc.start() : Training started
2021-11-28 23:19:47,421 INFO - bernoulli_nbc.start() : Training completed
2021-11-28 23:19:47,421 INFO - bernoulli_nbc.start() : Prediction started
2021-11-28 23:19:49,142 INFO - bernoulli_nbc.start() : Prediction completed
2021-11-28 23:19:51,510 INFO - bernoulli_nbc.start() : Prediction results: method: BernoulliNBC, description: Naive Bayes classifier for multivariate Bernoulli models,  train_time: 7.444075107574463, predict_time: 1.7200391292572021,  true_positive: 203, true_negative: 71, false_positive: 179, false_negative: 47, sensitivity: 0.812,  specificity: 0.284, precision: 0.5314136125654451,  accuracy: 0.548,  error: 0.45199999999999996, f1: 0.6424050632911393, myScore1: 0.7599828309552116, myScore2: 0.08629749888437882, myScore3: 0.37348281929409455
2021-11-28 23:19:54,574 INFO - statictics.insert() : History send to GIT
2021-11-28 23:19:54,577 INFO - complement_nbc.__init__() : Algorithm initialized
2021-11-28 23:19:54,577 INFO - complement_nbc.start() : Training started
2021-11-28 23:19:59,535 INFO - complement_nbc.start() : Training completed
2021-11-28 23:19:59,536 INFO - complement_nbc.start() : Prediction started
2021-11-28 23:20:00,656 INFO - complement_nbc.start() : Prediction completed
2021-11-28 23:20:02,272 INFO - complement_nbc.start() : Prediction results: method: ComplementNBC, description: The Complement Naive Bayes classifier described in Rennie et al,  train_time: 4.957724571228027, predict_time: 1.120225429534912,  true_positive: 192, true_negative: 136, false_positive: 114, false_negative: 58, sensitivity: 0.768,  specificity: 0.544, precision: 0.6274509803921569,  accuracy: 0.656,  error: 0.344, f1: 0.6906474820143885, myScore1: 0.8955665134650146, myScore2: 0.13930735201034278, myScore3: 0.6165254455088803
2021-11-28 23:20:05,440 INFO - statictics.insert() : History send to GIT
2021-11-28 23:20:05,443 INFO - gaussian_nbc.__init__() : Algorithm initialized
2021-11-28 23:20:05,443 INFO - gaussian_nbc.start() : Training started
2021-11-28 23:20:15,150 INFO - gaussian_nbc.start() : Training completed
2021-11-28 23:20:15,150 INFO - gaussian_nbc.start() : Prediction started
2021-11-28 23:20:20,899 INFO - gaussian_nbc.start() : Prediction completed
2021-11-28 23:20:27,198 INFO - gaussian_nbc.start() : Prediction results: method: GaussianNBC, description: Gaussian Naive Bayes (GaussianNB),  train_time: 9.706174373626709, predict_time: 5.7482078075408936,  true_positive: 206, true_negative: 154, false_positive: 96, false_negative: 44, sensitivity: 0.824,  specificity: 0.616, precision: 0.6821192052980133,  accuracy: 0.72,  error: 0.28, f1: 0.7463768115942029, myScore1: 1.01454318346976, myScore2: 0.07689711547138828, myScore3: 0.12984513375021942
2021-11-28 23:20:30,432 INFO - statictics.insert() : History send to GIT
2021-11-28 23:20:30,433 INFO - multinomial_nbc.__init__() : Algorithm initialized
2021-11-28 23:20:30,434 INFO - multinomial_nbc.start() : Training started
2021-11-28 23:20:35,727 INFO - multinomial_nbc.start() : Training completed
2021-11-28 23:20:35,728 INFO - multinomial_nbc.start() : Prediction started
2021-11-28 23:20:37,173 INFO - multinomial_nbc.start() : Prediction completed
2021-11-28 23:20:39,487 INFO - multinomial_nbc.start() : Prediction results: method: MultinomialNBC, description: Naive Bayes classifier for multinomial models,  train_time: 5.293262243270874, predict_time: 1.4457125663757324,  true_positive: 192, true_negative: 136, false_positive: 114, false_negative: 58, sensitivity: 0.768,  specificity: 0.544, precision: 0.6274509803921569,  accuracy: 0.656,  error: 0.344, f1: 0.6906474820143885, myScore1: 0.8955665134650146, myScore2: 0.13047671743306932, myScore3: 0.4777211584635927
2021-11-28 23:20:42,984 INFO - statictics.insert() : History send to GIT
2021-11-28 23:20:42,995 INFO - k_neighbors.__init__() : Algorithm initialized
2021-11-28 23:20:42,995 INFO - k_neighbors.start() : Training started
2021-11-28 23:20:43,288 INFO - k_neighbors.start() : Training completed
2021-11-28 23:20:43,288 INFO - k_neighbors.start() : Prediction started
2021-11-28 23:20:54,716 INFO - k_neighbors.start() : Prediction completed
2021-11-28 23:21:10,194 INFO - k_neighbors.start() : Prediction results: method: KNeighborsClassifier, description: Classifier implementing the k-nearest neighbors vote,  train_time: 0.2926332950592041, predict_time: 11.427538871765137,  true_positive: 211, true_negative: 193, false_positive: 57, false_negative: 39, sensitivity: 0.844,  specificity: 0.772, precision: 0.7873134328358209,  accuracy: 0.808,  error: 0.19199999999999995, f1: 0.8146718146718146, myScore1: 1.2493005839528228, myScore2: 2.7839341196872156, myScore3: 0.071290224764379
2021-11-28 23:21:13,199 INFO - statictics.insert() : History send to GIT
2021-11-28 23:21:13,206 INFO - linear_svm.__init__() : Algorithm initialized
2021-11-28 23:21:13,206 INFO - linear_svm.start() : Training started
2021-11-28 23:34:35,680 INFO - linear_svm.start() : Training completed
2021-11-28 23:34:35,689 INFO - linear_svm.start() : Prediction started
2021-11-28 23:34:37,362 INFO - linear_svm.start() : Prediction completed
2021-11-28 23:34:39,569 INFO - linear_svm.start() : Prediction results: method: LinearSVM, description: Linear Support Vector Classification,  train_time: 802.452553987503, predict_time: 1.671403169631958,  true_positive: 209, true_negative: 203, false_positive: 47, false_negative: 41, sensitivity: 0.836,  specificity: 0.812, precision: 0.81640625,  accuracy: 0.824,  error: 0.17600000000000005, f1: 0.8260869565217391, myScore1: 1.3100659214426877, myScore2: 0.001029452710215443, myScore3: 0.4942475708620578
2021-11-28 23:34:42,971 INFO - statictics.insert() : History send to GIT
2021-11-28 23:34:42,976 INFO - nonlinear_svm.__init__() : Algorithm initialized
2021-11-28 23:34:42,977 INFO - nonlinear_svm.start() : Training started
2021-11-28 23:38:30,446 INFO - nonlinear_svm.start() : Training completed
2021-11-28 23:38:30,446 INFO - nonlinear_svm.start() : Prediction started
2021-11-28 23:41:31,324 INFO - nonlinear_svm.start() : Prediction completed
2021-11-28 23:44:37,377 INFO - nonlinear_svm.start() : Prediction results: method: NonLinearSVM, description: Non Linear Support Vector Classification,  train_time: 227.46939992904663, predict_time: 180.87746262550354,  true_positive: 215, true_negative: 199, false_positive: 51, false_negative: 35, sensitivity: 0.86,  specificity: 0.796, precision: 0.8082706766917294,  accuracy: 0.828,  error: 0.17200000000000004, f1: 0.8333333333333333, myScore1: 1.3272890831730488, myScore2: 0.0036634964245444474, myScore3: 0.004607170629426079
2021-11-28 23:44:40,879 INFO - statictics.insert() : History send to GIT
2021-11-28 23:44:40,880 INFO - ada_boost.__init__() : Algorithm initialized
2021-11-28 23:44:40,880 INFO - ada_boost.start() : Training started
2021-11-29 00:14:39,605 INFO - ada_boost.start() : Training completed
2021-11-29 00:14:39,606 INFO - ada_boost.start() : Prediction started
2021-11-29 00:15:05,064 INFO - ada_boost.start() : Prediction completed
2021-11-29 00:15:31,186 INFO - ada_boost.start() : Prediction results: method: AdaBoostClassifier, description: An AdaBoost classifier,  train_time: 1798.7239835262299, predict_time: 25.45801091194153,  true_positive: 217, true_negative: 194, false_positive: 56, false_negative: 33, sensitivity: 0.868,  specificity: 0.776, precision: 0.7948717948717948,  accuracy: 0.822,  error: 0.17800000000000005, f1: 0.8298279158699808, myScore1: 1.3027988902311587, myScore2: 0.0004613425536491602, myScore3: 0.03259594470048465
2021-11-29 00:15:34,446 INFO - statictics.insert() : History send to GIT
2021-11-29 00:15:34,446 INFO - gradient_boost.__init__() : Algorithm initialized
2021-11-29 00:15:34,447 INFO - gradient_boost.start() : Training started
2021-11-29 02:42:26,241 INFO - gradient_boost.start() : Training completed
2021-11-29 02:42:26,241 INFO - gradient_boost.start() : Prediction started
2021-11-29 02:42:26,876 INFO - gradient_boost.start() : Prediction completed
2021-11-29 02:42:28,212 INFO - gradient_boost.start() : Prediction results: method: GradientBoostingClassifier, description: An GradientBoost classifier,  train_time: 8811.794743776321, predict_time: 0.6334531307220459,  true_positive: 213, true_negative: 204, false_positive: 46, false_negative: 37, sensitivity: 0.852,  specificity: 0.816, precision: 0.8223938223938224,  accuracy: 0.834,  error: 0.16600000000000004, f1: 0.8369351669941061, myScore1: 1.3533166042906521, myScore2: 9.497896754633608e-05, myScore3: 1.3212266644575894
2021-11-29 02:42:51,135 INFO - statictics.insert() : History send to GIT
2021-11-29 02:42:56,194 INFO - densenet121.__init__() : Algorithm initialized
2021-11-29 02:42:56,194 INFO - densenet121.start() : Training started
2021-11-29 02:46:54,306 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 02:47:52,907 INFO - densenet121.start() : Training completed
2021-11-29 02:47:52,907 INFO - densenet121.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.7222065329551697, 0.46498987078666687], 'accuracy': [0.7629076242446899, 0.8214285969734192], 'val_loss': [0.8438820838928223, 0.6484373807907104], 'val_accuracy': [0.6859999895095825, 0.7620000243186951]}
2021-11-29 02:47:53,869 INFO - densenet121.start() : Model saved
2021-11-29 02:47:53,869 INFO - densenet121.start() : Prediction started
2021-11-29 02:48:55,953 INFO - densenet121.start() : Prediction completed
2021-11-29 02:48:56,545 INFO - densenet121.start() : Prediction results: method: DenseNet121, description: ,  train_time: 296.7114107608795, predict_time: 62.083518505096436,  true_positive: 214, true_negative: 167, false_positive: 83, false_negative: 36, sensitivity: 0.856,  specificity: 0.668, precision: 0.7205387205387206,  accuracy: 0.762,  error: 0.238, f1: 0.7824497257769653, myScore1: 1.1120468021692456, myScore2: 0.002637073255020662, myScore3: 0.01260317946884299
2021-11-29 02:49:19,496 INFO - statictics.insert() : History send to GIT
2021-11-29 02:49:26,583 INFO - densenet169.__init__() : Algorithm initialized
2021-11-29 02:49:26,584 INFO - densenet169.start() : Training started
2021-11-29 02:54:12,600 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 02:55:22,126 INFO - densenet169.start() : Training completed
2021-11-29 02:55:22,126 INFO - densenet169.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [1.019485354423523, 0.5502199530601501], 'accuracy': [0.6875, 0.8214285969734192], 'val_loss': [0.6374809741973877, 0.814854621887207], 'val_accuracy': [0.7319999933242798, 0.6840000152587891]}
2021-11-29 02:55:23,143 INFO - densenet169.start() : Model saved
2021-11-29 02:55:23,144 INFO - densenet169.start() : Prediction started
2021-11-29 02:56:37,385 INFO - densenet169.start() : Prediction completed
2021-11-29 02:56:37,931 INFO - densenet169.start() : Prediction results: method: DenseNet169, description: ,  train_time: 355.5417947769165, predict_time: 74.24145197868347,  true_positive: 222, true_negative: 120, false_positive: 130, false_negative: 28, sensitivity: 0.888,  specificity: 0.48, precision: 0.6306818181818182,  accuracy: 0.684,  error: 0.31599999999999995, f1: 0.7375415282392027, myScore1: 0.953494642140315, myScore2: 0.002074415832608289, myScore3: 0.009934362927747815
2021-11-29 02:57:00,837 INFO - statictics.insert() : History send to GIT
2021-11-29 02:57:09,034 INFO - densenet201.__init__() : Algorithm initialized
2021-11-29 02:57:09,035 INFO - densenet201.start() : Training started
2021-11-29 03:03:19,370 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:04:47,858 INFO - densenet201.start() : Training completed
2021-11-29 03:04:47,859 INFO - densenet201.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.6666520833969116, 0.51600182056427], 'accuracy': [0.703125, 0.7857142686843872], 'val_loss': [0.5328953266143799, 0.5335100293159485], 'val_accuracy': [0.7440000176429749, 0.7300000190734863]}
2021-11-29 03:04:49,147 INFO - densenet201.start() : Model saved
2021-11-29 03:04:49,147 INFO - densenet201.start() : Prediction started
2021-11-29 03:06:24,950 INFO - densenet201.start() : Prediction completed
2021-11-29 03:06:25,517 INFO - densenet201.start() : Prediction results: method: DenseNet201, description: ,  train_time: 458.8231530189514, predict_time: 95.80235028266907,  true_positive: 202, true_negative: 163, false_positive: 87, false_negative: 48, sensitivity: 0.808,  specificity: 0.652, precision: 0.698961937716263,  accuracy: 0.73,  error: 0.27, f1: 0.7495361781076066, myScore1: 1.0340346531958, myScore2: 0.001633605830864964, myScore3: 0.007823776513791854
2021-11-29 03:06:48,504 INFO - statictics.insert() : History send to GIT
2021-11-29 03:06:52,128 INFO - efficientnetb0.__init__() : Algorithm initialized
2021-11-29 03:06:52,128 INFO - efficientnetb0.start() : Training started
2021-11-29 03:08:45,403 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:09:11,324 INFO - efficientnetb0.start() : Training completed
2021-11-29 03:09:11,324 INFO - efficientnetb0.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.32379764318466187, 0.3585297167301178], 'accuracy': [0.8620923757553101, 0.8571428656578064], 'val_loss': [0.3593241274356842, 0.3627583980560303], 'val_accuracy': [0.843999981880188, 0.8460000157356262]}
2021-11-29 03:09:11,741 INFO - efficientnetb0.start() : Model saved
2021-11-29 03:09:11,741 INFO - efficientnetb0.start() : Prediction started
2021-11-29 03:09:41,231 INFO - efficientnetb0.start() : Prediction completed
2021-11-29 03:09:41,860 INFO - efficientnetb0.start() : Prediction results: method: EfficientNetB0, description: ,  train_time: 139.19486737251282, predict_time: 29.48864459991455,  true_positive: 195, true_negative: 228, false_positive: 22, false_negative: 55, sensitivity: 0.78,  specificity: 0.912, precision: 0.8986175115207373,  accuracy: 0.846,  error: 0.15400000000000003, f1: 0.8351177730192719, myScore1: 1.410571287012359, myScore2: 0.005999630509250981, myScore3: 0.028319978227201798
2021-11-29 03:10:04,867 INFO - statictics.insert() : History send to GIT
2021-11-29 03:10:09,835 INFO - efficientnetb1.__init__() : Algorithm initialized
2021-11-29 03:10:09,836 INFO - efficientnetb1.start() : Training started
2021-11-29 03:12:45,800 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:13:22,000 INFO - efficientnetb1.start() : Training completed
2021-11-29 03:13:22,000 INFO - efficientnetb1.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.32782652974128723, 0.19573619961738586], 'accuracy': [0.859375, 0.9642857313156128], 'val_loss': [0.3529394567012787, 0.3440241813659668], 'val_accuracy': [0.8519999980926514, 0.8579999804496765]}
2021-11-29 03:13:22,597 INFO - efficientnetb1.start() : Model saved
2021-11-29 03:13:22,597 INFO - efficientnetb1.start() : Prediction started
2021-11-29 03:14:04,087 INFO - efficientnetb1.start() : Prediction completed
2021-11-29 03:14:04,669 INFO - efficientnetb1.start() : Prediction results: method: EfficientNetB1, description: ,  train_time: 192.16335558891296, predict_time: 41.48973846435547,  true_positive: 233, true_negative: 196, false_positive: 54, false_negative: 17, sensitivity: 0.932,  specificity: 0.784, precision: 0.8118466898954704,  accuracy: 0.858,  error: 0.14200000000000002, f1: 0.8677839851024208, myScore1: 1.4767020136534335, myScore2: 0.0045158661100758194, myScore3: 0.0209156291946248
2021-11-29 03:14:27,699 INFO - statictics.insert() : History send to GIT
2021-11-29 03:14:32,661 INFO - efficientnetb2.__init__() : Algorithm initialized
2021-11-29 03:14:32,662 INFO - efficientnetb2.start() : Training started
2021-11-29 03:17:17,699 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:17:56,691 INFO - efficientnetb2.start() : Training completed
2021-11-29 03:17:56,692 INFO - efficientnetb2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.35751616954803467, 0.38356080651283264], 'accuracy': [0.8457880616188049, 0.8214285969734192], 'val_loss': [0.3757895529270172, 0.37144386768341064], 'val_accuracy': [0.8220000267028809, 0.8259999752044678]}
2021-11-29 03:17:57,407 INFO - efficientnetb2.start() : Model saved
2021-11-29 03:17:57,408 INFO - efficientnetb2.start() : Prediction started
2021-11-29 03:18:39,991 INFO - efficientnetb2.start() : Prediction completed
2021-11-29 03:18:40,545 INFO - efficientnetb2.start() : Prediction results: method: EfficientNetB2, description: ,  train_time: 204.02858901023865, predict_time: 42.582767486572266,  true_positive: 222, true_negative: 191, false_positive: 59, false_negative: 28, sensitivity: 0.888,  specificity: 0.764, precision: 0.7900355871886121,  accuracy: 0.826,  error: 0.17400000000000004, f1: 0.8361581920903955, myScore1: 1.31959529844222, myScore2: 0.004098240330664813, myScore3: 0.019636069740043633
2021-11-29 03:19:03,591 INFO - statictics.insert() : History send to GIT
2021-11-29 03:19:09,817 INFO - efficientnetb3.__init__() : Algorithm initialized
2021-11-29 03:19:09,817 INFO - efficientnetb3.start() : Training started
2021-11-29 03:22:47,806 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:23:39,436 INFO - efficientnetb3.start() : Training completed
2021-11-29 03:23:39,437 INFO - efficientnetb3.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.32568681240081787, 0.18764154613018036], 'accuracy': [0.8573369383811951, 0.9285714030265808], 'val_loss': [0.3576599955558777, 0.34655556082725525], 'val_accuracy': [0.8539999723434448, 0.8479999899864197]}
2021-11-29 03:23:40,133 INFO - efficientnetb3.start() : Model saved
2021-11-29 03:23:40,133 INFO - efficientnetb3.start() : Prediction started
2021-11-29 03:24:37,728 INFO - efficientnetb3.start() : Prediction completed
2021-11-29 03:24:38,349 INFO - efficientnetb3.start() : Prediction results: method: EfficientNetB3, description: ,  train_time: 269.6183829307556, predict_time: 57.59376096725464,  true_positive: 217, true_negative: 207, false_positive: 43, false_negative: 33, sensitivity: 0.868,  specificity: 0.828, precision: 0.8346153846153846,  accuracy: 0.848,  error: 0.15200000000000002, f1: 0.8509803921568627, myScore1: 1.4212464713820752, myScore2: 0.003156240249298634, myScore3: 0.014775565579762954
2021-11-29 03:25:01,436 INFO - statictics.insert() : History send to GIT
2021-11-29 03:25:08,394 INFO - efficientnetb4.__init__() : Algorithm initialized
2021-11-29 03:25:08,395 INFO - efficientnetb4.start() : Training started
2021-11-29 03:30:08,234 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:31:17,822 INFO - efficientnetb4.start() : Training completed
2021-11-29 03:31:17,822 INFO - efficientnetb4.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.3723956346511841, 0.21501514315605164], 'accuracy': [0.8322010636329651, 0.8928571343421936], 'val_loss': [0.3626904785633087, 0.3773588538169861], 'val_accuracy': [0.8379999995231628, 0.8240000009536743]}
2021-11-29 03:31:18,672 INFO - efficientnetb4.start() : Model saved
2021-11-29 03:31:18,673 INFO - efficientnetb4.start() : Prediction started
2021-11-29 03:32:34,893 INFO - efficientnetb4.start() : Prediction completed
2021-11-29 03:32:35,480 INFO - efficientnetb4.start() : Prediction results: method: EfficientNetB4, description: ,  train_time: 369.4259133338928, predict_time: 76.22047019004822,  true_positive: 233, true_negative: 179, false_positive: 71, false_negative: 17, sensitivity: 0.932,  specificity: 0.716, precision: 0.7664473684210527,  accuracy: 0.824,  error: 0.17600000000000005, f1: 0.8411552346570398, myScore1: 1.3126041723524433, myScore2: 0.0022769253706812678, myScore3: 0.011035817970680347
2021-11-29 03:32:58,540 INFO - statictics.insert() : History send to GIT
2021-11-29 03:33:09,134 INFO - efficientnetb5.__init__() : Algorithm initialized
2021-11-29 03:33:09,134 INFO - efficientnetb5.start() : Training started
2021-11-29 03:40:04,815 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:41:41,940 INFO - efficientnetb5.start() : Training completed
2021-11-29 03:41:41,941 INFO - efficientnetb5.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.33513349294662476, 0.23915372788906097], 'accuracy': [0.851902186870575, 0.8928571343421936], 'val_loss': [0.3998382091522217, 0.41691622138023376], 'val_accuracy': [0.8119999766349792, 0.7940000295639038]}
2021-11-29 03:41:43,128 INFO - efficientnetb5.start() : Model saved
2021-11-29 03:41:43,129 INFO - efficientnetb5.start() : Prediction started
2021-11-29 03:43:29,579 INFO - efficientnetb5.start() : Prediction completed
2021-11-29 03:43:30,162 INFO - efficientnetb5.start() : Prediction results: method: EfficientNetB5, description: ,  train_time: 512.8046734333038, predict_time: 106.45032167434692,  true_positive: 220, true_negative: 177, false_positive: 73, false_negative: 30, sensitivity: 0.88,  specificity: 0.708, precision: 0.7508532423208191,  accuracy: 0.794,  error: 0.20599999999999996, f1: 0.8103130755064456, myScore1: 1.2038787551891883, myScore2: 0.0015801593033099302, myScore3: 0.00761212425440439
2021-11-29 03:43:53,243 INFO - statictics.insert() : History send to GIT
2021-11-29 03:44:04,971 INFO - efficientnetb6.__init__() : Algorithm initialized
2021-11-29 03:44:04,971 INFO - efficientnetb6.start() : Training started
2021-11-29 03:53:07,703 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 03:55:17,299 INFO - efficientnetb6.start() : Training completed
2021-11-29 03:55:17,300 INFO - efficientnetb6.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.3725331723690033, 0.2719372808933258], 'accuracy': [0.83152174949646, 0.8928571343421936], 'val_loss': [0.39675506949424744, 0.4020981192588806], 'val_accuracy': [0.8320000171661377, 0.8119999766349792]}
2021-11-29 03:55:18,759 INFO - efficientnetb6.start() : Model saved
2021-11-29 03:55:18,760 INFO - efficientnetb6.start() : Prediction started
2021-11-29 03:57:37,252 INFO - efficientnetb6.start() : Prediction completed
2021-11-29 03:57:37,827 INFO - efficientnetb6.start() : Prediction results: method: EfficientNetB6, description: ,  train_time: 672.326940536499, predict_time: 138.49186873435974,  true_positive: 209, true_negative: 197, false_positive: 53, false_negative: 41, sensitivity: 0.836,  specificity: 0.788, precision: 0.7977099236641222,  accuracy: 0.812,  error: 0.18799999999999994, f1: 0.81640625, myScore1: 1.2634890109834336, myScore2: 0.0012142994736289007, myScore3: 0.005894976054990946
2021-11-29 03:57:43,945 INFO - statictics.insert() : History send to GIT
2021-11-29 03:57:57,355 INFO - efficientnetb7.__init__() : Algorithm initialized
2021-11-29 03:57:57,356 INFO - efficientnetb7.start() : Training started
2021-11-29 04:10:22,509 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:13:19,678 INFO - efficientnetb7.start() : Training completed
2021-11-29 04:13:19,679 INFO - efficientnetb7.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.35069066286087036, 0.1178722232580185], 'accuracy': [0.84714674949646, 0.9642857313156128], 'val_loss': [0.3726271390914917, 0.37202900648117065], 'val_accuracy': [0.8460000157356262, 0.843999981880188]}
2021-11-29 04:13:21,780 INFO - efficientnetb7.start() : Model saved
2021-11-29 04:13:21,780 INFO - efficientnetb7.start() : Prediction started
2021-11-29 04:16:28,702 INFO - efficientnetb7.start() : Prediction completed
2021-11-29 04:16:29,297 INFO - efficientnetb7.start() : Prediction results: method: EfficientNetB7, description: ,  train_time: 922.3228583335876, predict_time: 186.920565366745,  true_positive: 206, true_negative: 216, false_positive: 34, false_negative: 44, sensitivity: 0.824,  specificity: 0.864, precision: 0.8583333333333333,  accuracy: 0.844,  error: 0.15600000000000003, f1: 0.8408163265306122, myScore1: 1.4004671376242805, myScore2: 0.0009116290666912042, myScore3: 0.004498254779408032
2021-11-29 04:16:52,463 INFO - statictics.insert() : History send to GIT
2021-11-29 04:17:02,704 INFO - inceptionresnetv2.__init__() : Algorithm initialized
2021-11-29 04:17:02,705 INFO - inceptionresnetv2.start() : Training started
2021-11-29 04:22:06,776 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:23:18,135 INFO - inceptionresnetv2.start() : Training completed
2021-11-29 04:23:18,135 INFO - inceptionresnetv2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [156.69717407226562, 116.79554748535156], 'accuracy': [0.48709240555763245, 0.7142857313156128], 'val_loss': [215.3971710205078, 92.08970642089844], 'val_accuracy': [0.5, 0.5]}
2021-11-29 04:23:20,058 INFO - inceptionresnetv2.start() : Model saved
2021-11-29 04:23:20,058 INFO - inceptionresnetv2.start() : Prediction started
2021-11-29 04:24:38,713 INFO - inceptionresnetv2.start() : Prediction completed
2021-11-29 04:24:39,236 INFO - inceptionresnetv2.start() : Prediction results: method: InceptionResNetV2, description: ,  train_time: 375.42992639541626, predict_time: 78.65359163284302,  true_positive: 250, true_negative: 0, false_positive: 250, false_negative: 0, sensitivity: 1.0,  specificity: 0.0, precision: 0.5,  accuracy: 0.5,  error: 0.5, f1: 0.6666666666666666, myScore1: 0.7333333333333334, myScore2: 0.001775741942224684, myScore3: 0.008475985048193142
2021-11-29 04:25:02,372 INFO - statictics.insert() : History send to GIT
2021-11-29 04:25:06,901 INFO - inceptionv3.__init__() : Algorithm initialized
2021-11-29 04:25:06,902 INFO - inceptionv3.start() : Training started
2021-11-29 04:27:23,935 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:27:57,150 INFO - inceptionv3.start() : Training completed
2021-11-29 04:27:57,150 INFO - inceptionv3.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [7.669079303741455, 6.0952229499816895], 'accuracy': [0.6474184989929199, 0.7142857313156128], 'val_loss': [5.624242782592773, 5.1339497566223145], 'val_accuracy': [0.628000020980835, 0.6800000071525574]}
2021-11-29 04:27:57,889 INFO - inceptionv3.start() : Model saved
2021-11-29 04:27:57,889 INFO - inceptionv3.start() : Prediction started
2021-11-29 04:28:34,073 INFO - inceptionv3.start() : Prediction completed
2021-11-29 04:28:34,668 INFO - inceptionv3.start() : Prediction results: method: InceptionV3, description: ,  train_time: 170.2470579147339, predict_time: 36.18321108818054,  true_positive: 230, true_negative: 110, false_positive: 140, false_negative: 20, sensitivity: 0.92,  specificity: 0.44, precision: 0.6216216216216216,  accuracy: 0.68,  error: 0.31999999999999995, f1: 0.7419354838709677, myScore1: 0.9496299040976461, myScore2: 0.004357992983600086, myScore3: 0.020504965191254828
2021-11-29 04:28:57,765 INFO - statictics.insert() : History send to GIT
2021-11-29 04:29:00,067 INFO - mobilenet.__init__() : Algorithm initialized
2021-11-29 04:29:00,068 INFO - mobilenet.start() : Training started
2021-11-29 04:30:01,788 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:30:17,107 INFO - mobilenet.start() : Training completed
2021-11-29 04:30:17,107 INFO - mobilenet.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.45105820894241333, 0.329202800989151], 'accuracy': [0.7785326242446899, 0.8571428656578064], 'val_loss': [0.5252342820167542, 0.5364623069763184], 'val_accuracy': [0.7319999933242798, 0.734000027179718]}
2021-11-29 04:30:17,304 INFO - mobilenet.start() : Model saved
2021-11-29 04:30:17,304 INFO - mobilenet.start() : Prediction started
2021-11-29 04:30:34,756 INFO - mobilenet.start() : Prediction completed
2021-11-29 04:30:35,321 INFO - mobilenet.start() : Prediction results: method: MobileNet, description: ,  train_time: 77.03938555717468, predict_time: 17.45165181159973,  true_positive: 223, true_negative: 144, false_positive: 106, false_negative: 27, sensitivity: 0.892,  specificity: 0.576, precision: 0.6778115501519757,  accuracy: 0.734,  error: 0.266, f1: 0.770293609671848, myScore1: 1.0490678094751817, myScore2: 0.009998698770775834, myScore3: 0.04413872210995241
2021-11-29 04:30:58,468 INFO - statictics.insert() : History send to GIT
2021-11-29 04:31:01,108 INFO - mobilenetv2.__init__() : Algorithm initialized
2021-11-29 04:31:01,108 INFO - mobilenetv2.start() : Training started
2021-11-29 04:32:06,140 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:32:21,655 INFO - mobilenetv2.start() : Training completed
2021-11-29 04:32:21,655 INFO - mobilenetv2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.4464738667011261, 0.4934075176715851], 'accuracy': [0.7805706262588501, 0.75], 'val_loss': [0.5216691493988037, 0.5038409233093262], 'val_accuracy': [0.7480000257492065, 0.7580000162124634]}
2021-11-29 04:32:21,977 INFO - mobilenetv2.start() : Model saved
2021-11-29 04:32:21,978 INFO - mobilenetv2.start() : Prediction started
2021-11-29 04:32:39,911 INFO - mobilenetv2.start() : Prediction completed
2021-11-29 04:32:40,457 INFO - mobilenetv2.start() : Prediction results: method: MobileNetV2, description: ,  train_time: 80.54640913009644, predict_time: 17.933429718017578,  true_positive: 189, true_negative: 190, false_positive: 60, false_negative: 61, sensitivity: 0.756,  specificity: 0.76, precision: 0.7590361445783133,  accuracy: 0.758,  error: 0.242, f1: 0.7575150300601203, myScore1: 1.0952842699837593, myScore2: 0.00940470268310288, myScore3: 0.042240388033475317
2021-11-29 04:33:03,553 INFO - statictics.insert() : History send to GIT
2021-11-29 04:33:06,679 INFO - mobilenetv3large.__init__() : Algorithm initialized
2021-11-29 04:33:06,680 INFO - mobilenetv3large.start() : Training started
2021-11-29 04:34:09,883 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:34:24,372 INFO - mobilenetv3large.start() : Training completed
2021-11-29 04:34:24,373 INFO - mobilenetv3large.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.46555107831954956, 0.293971449136734], 'accuracy': [0.7792119383811951, 0.8571428656578064], 'val_loss': [0.44017255306243896, 0.4997222125530243], 'val_accuracy': [0.7879999876022339, 0.7839999794960022]}
2021-11-29 04:34:24,805 INFO - mobilenetv3large.start() : Model saved
2021-11-29 04:34:24,806 INFO - mobilenetv3large.start() : Prediction started
2021-11-29 04:34:42,265 INFO - mobilenetv3large.start() : Prediction completed
2021-11-29 04:34:42,785 INFO - mobilenetv3large.start() : Prediction results: method: MobileNetV3Large, description: ,  train_time: 77.69266390800476, predict_time: 17.458848237991333,  true_positive: 150, true_negative: 242, false_positive: 8, false_negative: 100, sensitivity: 0.6,  specificity: 0.968, precision: 0.9493670886075949,  accuracy: 0.784,  error: 0.21599999999999997, f1: 0.7352941176470588, myScore1: 1.1607467306472519, myScore2: 0.009464138319645139, myScore3: 0.04211584336056154
2021-11-29 04:35:05,947 INFO - statictics.insert() : History send to GIT
2021-11-29 04:35:08,604 INFO - mobilenetv3small.__init__() : Algorithm initialized
2021-11-29 04:35:08,604 INFO - mobilenetv3small.start() : Training started
2021-11-29 04:35:36,880 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:35:42,436 INFO - mobilenetv3small.start() : Training completed
2021-11-29 04:35:42,436 INFO - mobilenetv3small.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.47745534777641296, 0.1648460179567337], 'accuracy': [0.7758151888847351, 0.9285714030265808], 'val_loss': [0.5823904275894165, 0.6355898976325989], 'val_accuracy': [0.6840000152587891, 0.6539999842643738]}
2021-11-29 04:35:42,736 INFO - mobilenetv3small.start() : Model saved
2021-11-29 04:35:42,736 INFO - mobilenetv3small.start() : Prediction started
2021-11-29 04:35:51,126 INFO - mobilenetv3small.start() : Prediction completed
2021-11-29 04:35:51,635 INFO - mobilenetv3small.start() : Prediction results: method: MobileNetV3Small, description: ,  train_time: 33.83110070228577, predict_time: 8.389454126358032,  true_positive: 241, true_negative: 86, false_positive: 164, false_negative: 9, sensitivity: 0.964,  specificity: 0.344, precision: 0.5950617283950618,  accuracy: 0.654,  error: 0.346, f1: 0.7358778625954199, myScore1: 0.9126624451776786, myScore2: 0.021751519971849483, myScore3: 0.08771462976159973
2021-11-29 04:36:11,452 INFO - statictics.insert() : History send to GIT
2021-11-29 04:36:18,166 INFO - resnet101.__init__() : Algorithm initialized
2021-11-29 04:36:18,167 INFO - resnet101.start() : Training started
2021-11-29 04:42:52,429 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:44:28,495 INFO - resnet101.start() : Training completed
2021-11-29 04:44:28,495 INFO - resnet101.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.3912786543369293, 0.24444352090358734], 'accuracy': [0.8226901888847351, 0.8928571343421936], 'val_loss': [0.3916057348251343, 0.37844836711883545], 'val_accuracy': [0.8339999914169312, 0.8220000267028809]}
2021-11-29 04:44:29,801 INFO - resnet101.start() : Model saved
2021-11-29 04:44:29,801 INFO - resnet101.start() : Prediction started
2021-11-29 04:46:10,773 INFO - resnet101.start() : Prediction completed
2021-11-29 04:46:11,289 INFO - resnet101.start() : Prediction results: method: ResNet101, description: ,  train_time: 490.3287453651428, predict_time: 100.97146415710449,  true_positive: 239, true_negative: 172, false_positive: 78, false_negative: 11, sensitivity: 0.956,  specificity: 0.688, precision: 0.7539432176656151,  accuracy: 0.822,  error: 0.17800000000000005, f1: 0.8430335097001764, myScore1: 1.3053088294256385, myScore2: 0.001719323041263628, myScore3: 0.008349225365183134
2021-11-29 04:46:34,580 INFO - statictics.insert() : History send to GIT
2021-11-29 04:46:41,698 INFO - resnet101v2.__init__() : Algorithm initialized
2021-11-29 04:46:41,699 INFO - resnet101v2.start() : Training started
2021-11-29 04:52:37,740 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 04:54:04,677 INFO - resnet101v2.start() : Training completed
2021-11-29 04:54:04,677 INFO - resnet101v2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [56.71833038330078, 75.75032043457031], 'accuracy': [0.514266312122345, 0.4285714328289032], 'val_loss': [58.426509857177734, 52.95783233642578], 'val_accuracy': [0.5, 0.5]}
2021-11-29 04:54:05,845 INFO - resnet101v2.start() : Model saved
2021-11-29 04:54:05,845 INFO - resnet101v2.start() : Prediction started
2021-11-29 04:55:37,662 INFO - resnet101v2.start() : Prediction completed
2021-11-29 04:55:38,223 INFO - resnet101v2.start() : Prediction results: method: ResNet101V2, description: ,  train_time: 442.97797870635986, predict_time: 91.81592154502869,  true_positive: 0, true_negative: 250, false_positive: 0, false_negative: 250, sensitivity: 0.0,  specificity: 1.0, precision: 0.0,  accuracy: 0.5,  error: 0.5, f1: 0.0, myScore1: 0.35000000000000003, myScore2: 0.0, myScore3: 0.0
2021-11-29 04:56:01,503 INFO - statictics.insert() : History send to GIT
2021-11-29 04:56:11,029 INFO - resnet152.__init__() : Algorithm initialized
2021-11-29 04:56:11,030 INFO - resnet152.start() : Training started
2021-11-29 05:05:56,468 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1472 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 05:08:20,264 INFO - resnet152.start() : Training completed
2021-11-29 05:08:20,264 INFO - resnet152.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 46}{'loss': [0.30415791273117065, 0.15265591442584991], 'accuracy': [0.860733687877655, 0.9642857313156128], 'val_loss': [0.3772377669811249, 0.3050382137298584], 'val_accuracy': [0.8379999995231628, 0.8640000224113464]}
2021-11-29 05:08:22,589 INFO - resnet152.start() : Model saved
2021-11-29 05:08:22,590 INFO - resnet152.start() : Prediction started
2021-11-29 05:10:52,535 INFO - resnet152.start() : Prediction completed
2021-11-29 05:10:53,223 INFO - resnet152.start() : Prediction results: method: ResNet152, description: ,  train_time: 729.2334251403809, predict_time: 149.9452395439148,  true_positive: 230, true_negative: 202, false_positive: 48, false_negative: 20, sensitivity: 0.92,  specificity: 0.808, precision: 0.8273381294964028,  accuracy: 0.864,  error: 0.136, f1: 0.8712121212121212, myScore1: 1.5128339912027597, myScore2: 0.0011946958150531961, myScore3: 0.0058102019368008505
