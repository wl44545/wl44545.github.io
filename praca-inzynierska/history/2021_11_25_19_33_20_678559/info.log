2021-11-25 06:26:06,919 INFO - data.__prepare() : Data prepared
2021-11-25 06:26:12,736 INFO - data.__augment() : Data augmented
2021-11-25 06:26:17,806 INFO - data.__copy() : Data copied
2021-11-25 06:26:26,279 INFO - data.__read() : Data prepared for algorithms
2021-11-25 06:26:26,510 INFO - data.__preprocess() : Data prepared for neural networks
2021-11-25 06:26:26,537 INFO - discrete_nbc.__init__() : Algorithm initialized
2021-11-25 06:27:32,125 INFO - discrete_nbc.start() : Training started
2021-11-25 06:43:31,761 INFO - discrete_nbc.start() : Training completed
2021-11-25 06:43:31,762 INFO - discrete_nbc.start() : Prediction started
2021-11-25 06:50:50,616 INFO - discrete_nbc.start() : Prediction completed
2021-11-25 06:58:06,576 INFO - discrete_nbc.start() : Prediction results: method: DiscreteNBC, description: DiscreteNBC,  train_time: 959.5997202396393, predict_time: 438.8533000946045,  true_positive: 305, true_negative: 304, false_positive: 71, false_negative: 70, sensitivity: 0.8133333333333334,  specificity: 0.8106666666666666, precision: 0.8111702127659575,  accuracy: 0.812,  error: 0.18799999999999994, f1: 0.8122503328894806
2021-11-25 06:58:07,484 INFO - bernoulli_nbc.__init__() : Algorithm initialized
2021-11-25 06:58:07,485 INFO - bernoulli_nbc.start() : Training started
2021-11-25 06:58:31,959 INFO - bernoulli_nbc.start() : Training completed
2021-11-25 06:58:31,960 INFO - bernoulli_nbc.start() : Prediction started
2021-11-25 06:58:34,208 INFO - bernoulli_nbc.start() : Prediction completed
2021-11-25 06:58:37,165 INFO - bernoulli_nbc.start() : Prediction results: method: BernoulliNBC, description: Naive Bayes classifier for multivariate Bernoulli models,  train_time: 24.47415328025818, predict_time: 2.247982978820801,  true_positive: 314, true_negative: 193, false_positive: 182, false_negative: 61, sensitivity: 0.8373333333333334,  specificity: 0.5146666666666667, precision: 0.6330645161290323,  accuracy: 0.676,  error: 0.32399999999999995, f1: 0.7210103329506314
2021-11-25 06:58:37,165 INFO - complement_nbc.__init__() : Algorithm initialized
2021-11-25 06:58:37,165 INFO - complement_nbc.start() : Training started
2021-11-25 06:58:54,701 INFO - complement_nbc.start() : Training completed
2021-11-25 06:58:54,702 INFO - complement_nbc.start() : Prediction started
2021-11-25 06:58:56,046 INFO - complement_nbc.start() : Prediction completed
2021-11-25 06:58:57,857 INFO - complement_nbc.start() : Prediction results: method: ComplementNBC, description: The Complement Naive Bayes classifier described in Rennie et al,  train_time: 17.534712314605713, predict_time: 1.3439929485321045,  true_positive: 292, true_negative: 282, false_positive: 93, false_negative: 83, sensitivity: 0.7786666666666666,  specificity: 0.752, precision: 0.7584415584415585,  accuracy: 0.7653333333333333,  error: 0.2346666666666667, f1: 0.768421052631579
2021-11-25 06:58:57,857 INFO - gaussian_nbc.__init__() : Algorithm initialized
2021-11-25 06:58:57,857 INFO - gaussian_nbc.start() : Training started
2021-11-25 06:59:13,454 INFO - gaussian_nbc.start() : Training completed
2021-11-25 06:59:13,454 INFO - gaussian_nbc.start() : Prediction started
2021-11-25 06:59:20,586 INFO - gaussian_nbc.start() : Prediction completed
2021-11-25 06:59:28,272 INFO - gaussian_nbc.start() : Prediction results: method: GaussianNBC, description: Gaussian Naive Bayes (GaussianNB),  train_time: 15.596952676773071, predict_time: 7.130857944488525,  true_positive: 275, true_negative: 290, false_positive: 85, false_negative: 100, sensitivity: 0.7333333333333333,  specificity: 0.7733333333333333, precision: 0.7638888888888888,  accuracy: 0.7533333333333333,  error: 0.2466666666666667, f1: 0.7482993197278911
2021-11-25 06:59:28,273 INFO - multinomial_nbc.__init__() : Algorithm initialized
2021-11-25 06:59:28,273 INFO - multinomial_nbc.start() : Training started
2021-11-25 06:59:45,679 INFO - multinomial_nbc.start() : Training completed
2021-11-25 06:59:45,680 INFO - multinomial_nbc.start() : Prediction started
2021-11-25 06:59:46,998 INFO - multinomial_nbc.start() : Prediction completed
2021-11-25 06:59:48,766 INFO - multinomial_nbc.start() : Prediction results: method: MultinomialNBC, description: Naive Bayes classifier for multinomial models,  train_time: 17.405380725860596, predict_time: 1.3172533512115479,  true_positive: 292, true_negative: 282, false_positive: 93, false_negative: 83, sensitivity: 0.7786666666666666,  specificity: 0.752, precision: 0.7584415584415585,  accuracy: 0.7653333333333333,  error: 0.2346666666666667, f1: 0.768421052631579
2021-11-25 06:59:48,769 INFO - k_neighbors.__init__() : Algorithm initialized
2021-11-25 06:59:48,769 INFO - k_neighbors.start() : Training started
2021-11-25 06:59:49,217 INFO - k_neighbors.start() : Training completed
2021-11-25 06:59:49,217 INFO - k_neighbors.start() : Prediction started
2021-11-25 07:00:11,867 INFO - k_neighbors.start() : Prediction completed
2021-11-25 07:00:39,390 INFO - k_neighbors.start() : Prediction results: method: KNeighborsClassifier, description: Classifier implementing the k-nearest neighbors vote,  train_time: 0.4479391574859619, predict_time: 22.649757146835327,  true_positive: 332, true_negative: 318, false_positive: 57, false_negative: 43, sensitivity: 0.8853333333333333,  specificity: 0.848, precision: 0.8534704370179949,  accuracy: 0.8666666666666667,  error: 0.1333333333333333, f1: 0.869109947643979
2021-11-25 07:00:39,462 INFO - linear_svm.__init__() : Algorithm initialized
2021-11-25 07:00:39,462 INFO - linear_svm.start() : Training started
2021-11-25 07:21:52,239 INFO - linear_svm.start() : Training completed
2021-11-25 07:21:52,262 INFO - linear_svm.start() : Prediction started
2021-11-25 07:21:54,992 INFO - linear_svm.start() : Prediction completed
2021-11-25 07:21:57,739 INFO - linear_svm.start() : Prediction results: method: LinearSVM, description: Linear Support Vector Classification,  train_time: 1272.7649157047272, predict_time: 2.7305922508239746,  true_positive: 310, true_negative: 328, false_positive: 47, false_negative: 65, sensitivity: 0.8266666666666667,  specificity: 0.8746666666666667, precision: 0.8683473389355743,  accuracy: 0.8506666666666667,  error: 0.14933333333333332, f1: 0.8469945355191256
2021-11-25 07:21:57,747 INFO - nonlinear_svm.__init__() : Algorithm initialized
2021-11-25 07:21:57,748 INFO - nonlinear_svm.start() : Training started
2021-11-25 07:35:27,187 INFO - nonlinear_svm.start() : Training completed
2021-11-25 07:35:27,200 INFO - nonlinear_svm.start() : Prediction started
2021-11-25 07:42:57,150 INFO - nonlinear_svm.start() : Prediction completed
2021-11-25 07:50:26,345 INFO - nonlinear_svm.start() : Prediction results: method: NonLinearSVM, description: Non Linear Support Vector Classification,  train_time: 809.4299266338348, predict_time: 449.9496545791626,  true_positive: 322, true_negative: 338, false_positive: 37, false_negative: 53, sensitivity: 0.8586666666666667,  specificity: 0.9013333333333333, precision: 0.8969359331476323,  accuracy: 0.88,  error: 0.12, f1: 0.8773841961852862
2021-11-25 07:50:26,637 INFO - ada_boost.__init__() : Algorithm initialized
2021-11-25 07:50:26,637 INFO - ada_boost.start() : Training started
2021-11-25 08:46:17,024 INFO - ada_boost.start() : Training completed
2021-11-25 08:46:17,025 INFO - ada_boost.start() : Prediction started
2021-11-25 08:46:54,945 INFO - ada_boost.start() : Prediction completed
2021-11-25 08:47:33,475 INFO - ada_boost.start() : Prediction results: method: AdaBoostClassifier, description: An AdaBoost classifier,  train_time: 3350.3863949775696, predict_time: 37.918914556503296,  true_positive: 320, true_negative: 332, false_positive: 43, false_negative: 55, sensitivity: 0.8533333333333334,  specificity: 0.8853333333333333, precision: 0.8815426997245179,  accuracy: 0.8693333333333333,  error: 0.1306666666666667, f1: 0.8672086720867208
2021-11-25 08:47:33,478 INFO - gradient_boost.__init__() : Algorithm initialized
2021-11-25 08:47:33,479 INFO - gradient_boost.start() : Training started
2021-11-25 13:38:07,095 INFO - gradient_boost.start() : Training completed
2021-11-25 13:38:07,095 INFO - gradient_boost.start() : Prediction started
2021-11-25 13:38:08,140 INFO - gradient_boost.start() : Prediction completed
2021-11-25 13:38:09,785 INFO - gradient_boost.start() : Prediction results: method: GradientBoostingClassifier, description: An GradientBoost classifier,  train_time: 17433.615403413773, predict_time: 1.0442826747894287,  true_positive: 336, true_negative: 344, false_positive: 31, false_negative: 39, sensitivity: 0.896,  specificity: 0.9173333333333333, precision: 0.9155313351498637,  accuracy: 0.9066666666666666,  error: 0.09333333333333338, f1: 0.9056603773584905
2021-11-25 13:38:15,660 INFO - densenet121.__init__() : Algorithm initialized
2021-11-25 13:38:15,660 INFO - densenet121.start() : Training started
2021-11-25 13:45:16,958 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 13:46:42,085 INFO - densenet121.start() : Training completed
2021-11-25 13:46:42,086 INFO - densenet121.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.6970541477203369, 0.40056687593460083], 'accuracy': [0.7482040524482727, 0.800000011920929], 'val_loss': [0.5018494725227356, 0.4572817385196686], 'val_accuracy': [0.7826666831970215, 0.8199999928474426]}
2021-11-25 13:46:42,086 INFO - densenet121.start() : Prediction started
2021-11-25 13:48:12,965 INFO - densenet121.start() : Prediction completed
2021-11-25 13:48:13,494 INFO - densenet121.start() : Prediction results: method: DenseNet121, description: ,  train_time: 506.424015045166, predict_time: 90.87859416007996,  true_positive: 322, true_negative: 293, false_positive: 82, false_negative: 53, sensitivity: 0.8586666666666667,  specificity: 0.7813333333333333, precision: 0.7970297029702971,  accuracy: 0.82,  error: 0.18000000000000005, f1: 0.8267008985879333
2021-11-25 13:48:19,657 INFO - densenet169.__init__() : Algorithm initialized
2021-11-25 13:48:19,658 INFO - densenet169.start() : Training started
2021-11-25 13:56:41,645 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 13:58:24,536 INFO - densenet169.start() : Training completed
2021-11-25 13:58:24,536 INFO - densenet169.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.9248258471488953, 0.42741215229034424], 'accuracy': [0.6882184147834778, 0.8666666746139526], 'val_loss': [0.6107292175292969, 0.6730038523674011], 'val_accuracy': [0.7746666669845581, 0.7279999852180481]}
2021-11-25 13:58:24,536 INFO - densenet169.start() : Prediction started
2021-11-25 14:00:13,166 INFO - densenet169.start() : Prediction completed
2021-11-25 14:00:13,728 INFO - densenet169.start() : Prediction results: method: DenseNet169, description: ,  train_time: 604.8771228790283, predict_time: 108.62844681739807,  true_positive: 204, true_negative: 342, false_positive: 33, false_negative: 171, sensitivity: 0.544,  specificity: 0.912, precision: 0.8607594936708861,  accuracy: 0.728,  error: 0.272, f1: 0.6666666666666666
2021-11-25 14:00:22,022 INFO - densenet201.__init__() : Algorithm initialized
2021-11-25 14:00:22,022 INFO - densenet201.start() : Training started
2021-11-25 14:11:09,946 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 14:13:22,576 INFO - densenet201.start() : Training completed
2021-11-25 14:13:22,576 INFO - densenet201.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.5698601603507996, 0.3918628990650177], 'accuracy': [0.7399425506591797, 0.8333333134651184], 'val_loss': [0.4036843776702881, 0.4521288573741913], 'val_accuracy': [0.8146666884422302, 0.7906666398048401]}
2021-11-25 14:13:22,576 INFO - densenet201.start() : Prediction started
2021-11-25 14:15:43,179 INFO - densenet201.start() : Prediction completed
2021-11-25 14:15:43,758 INFO - densenet201.start() : Prediction results: method: DenseNet201, description: ,  train_time: 780.5525648593903, predict_time: 140.6026041507721,  true_positive: 255, true_negative: 338, false_positive: 37, false_negative: 120, sensitivity: 0.68,  specificity: 0.9013333333333333, precision: 0.8732876712328768,  accuracy: 0.7906666666666666,  error: 0.20933333333333337, f1: 0.7646176911544228
2021-11-25 14:15:46,630 INFO - efficientnetb0.__init__() : Algorithm initialized
2021-11-25 14:15:46,631 INFO - efficientnetb0.start() : Training started
2021-11-25 14:18:58,619 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 14:19:36,923 INFO - efficientnetb0.start() : Training completed
2021-11-25 14:19:36,924 INFO - efficientnetb0.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.33452826738357544, 0.1623682677745819], 'accuracy': [0.8530890941619873, 0.9333333373069763], 'val_loss': [0.2697691321372986, 0.2698339521884918], 'val_accuracy': [0.8840000033378601, 0.8813333511352539]}
2021-11-25 14:19:36,924 INFO - efficientnetb0.start() : Prediction started
2021-11-25 14:20:20,438 INFO - efficientnetb0.start() : Prediction completed
2021-11-25 14:20:20,986 INFO - efficientnetb0.start() : Prediction results: method: EfficientNetB0, description: ,  train_time: 230.2919523715973, predict_time: 43.514254331588745,  true_positive: 327, true_negative: 334, false_positive: 41, false_negative: 48, sensitivity: 0.872,  specificity: 0.8906666666666667, precision: 0.8885869565217391,  accuracy: 0.8813333333333333,  error: 0.1186666666666667, f1: 0.8802153432032302
2021-11-25 14:20:25,185 INFO - efficientnetb1.__init__() : Algorithm initialized
2021-11-25 14:20:25,185 INFO - efficientnetb1.start() : Training started
2021-11-25 14:24:56,605 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 14:25:50,410 INFO - efficientnetb1.start() : Training completed
2021-11-25 14:25:50,410 INFO - efficientnetb1.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.33231398463249207, 0.18701864778995514], 'accuracy': [0.8606321811676025, 0.9333333373069763], 'val_loss': [0.257004976272583, 0.2571669816970825], 'val_accuracy': [0.9066666960716248, 0.8893333077430725]}
2021-11-25 14:25:50,411 INFO - efficientnetb1.start() : Prediction started
2021-11-25 14:26:50,328 INFO - efficientnetb1.start() : Prediction completed
2021-11-25 14:26:50,910 INFO - efficientnetb1.start() : Prediction results: method: EfficientNetB1, description: ,  train_time: 325.2250783443451, predict_time: 59.91556668281555,  true_positive: 340, true_negative: 327, false_positive: 48, false_negative: 35, sensitivity: 0.9066666666666666,  specificity: 0.872, precision: 0.8762886597938144,  accuracy: 0.8893333333333333,  error: 0.11066666666666669, f1: 0.8912188728702489
2021-11-25 14:26:55,063 INFO - efficientnetb2.__init__() : Algorithm initialized
2021-11-25 14:26:55,063 INFO - efficientnetb2.start() : Training started
2021-11-25 14:31:41,608 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 14:32:38,714 INFO - efficientnetb2.start() : Training completed
2021-11-25 14:32:38,714 INFO - efficientnetb2.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.3453656733036041, 0.25056299567222595], 'accuracy': [0.852011501789093, 0.8666666746139526], 'val_loss': [0.2710973024368286, 0.26699644327163696], 'val_accuracy': [0.8840000033378601, 0.8920000195503235]}
2021-11-25 14:32:38,715 INFO - efficientnetb2.start() : Prediction started
2021-11-25 14:33:41,999 INFO - efficientnetb2.start() : Prediction completed
2021-11-25 14:33:42,587 INFO - efficientnetb2.start() : Prediction results: method: EfficientNetB2, description: ,  train_time: 343.6503264904022, predict_time: 63.284000635147095,  true_positive: 328, true_negative: 341, false_positive: 34, false_negative: 47, sensitivity: 0.8746666666666667,  specificity: 0.9093333333333333, precision: 0.9060773480662984,  accuracy: 0.892,  error: 0.10799999999999998, f1: 0.8900949796472185
2021-11-25 14:33:48,372 INFO - efficientnetb3.__init__() : Algorithm initialized
2021-11-25 14:33:48,373 INFO - efficientnetb3.start() : Training started
2021-11-25 14:40:12,015 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 14:41:30,873 INFO - efficientnetb3.start() : Training completed
2021-11-25 14:41:30,874 INFO - efficientnetb3.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.3443499505519867, 0.22819899022579193], 'accuracy': [0.8433908224105835, 0.9333333373069763], 'val_loss': [0.27121075987815857, 0.29821690917015076], 'val_accuracy': [0.8853333592414856, 0.8773333430290222]}
2021-11-25 14:41:30,874 INFO - efficientnetb3.start() : Prediction started
2021-11-25 14:42:54,858 INFO - efficientnetb3.start() : Prediction completed
2021-11-25 14:42:55,413 INFO - efficientnetb3.start() : Prediction results: method: EfficientNetB3, description: ,  train_time: 462.49974060058594, predict_time: 83.98395442962646,  true_positive: 301, true_negative: 357, false_positive: 18, false_negative: 74, sensitivity: 0.8026666666666666,  specificity: 0.952, precision: 0.9435736677115988,  accuracy: 0.8773333333333333,  error: 0.1226666666666667, f1: 0.867435158501441
2021-11-25 14:43:01,506 INFO - efficientnetb4.__init__() : Algorithm initialized
2021-11-25 14:43:01,507 INFO - efficientnetb4.start() : Training started
2021-11-25 14:51:43,573 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 14:53:28,761 INFO - efficientnetb4.start() : Training completed
2021-11-25 14:53:28,764 INFO - efficientnetb4.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.33581507205963135, 0.3310225307941437], 'accuracy': [0.8516523241996765, 0.8666666746139526], 'val_loss': [0.2632882297039032, 0.26290667057037354], 'val_accuracy': [0.8933333158493042, 0.8973333239555359]}
2021-11-25 14:53:28,764 INFO - efficientnetb4.start() : Prediction started
2021-11-25 14:55:21,981 INFO - efficientnetb4.start() : Prediction completed
2021-11-25 14:55:22,520 INFO - efficientnetb4.start() : Prediction results: method: EfficientNetB4, description: ,  train_time: 627.2539520263672, predict_time: 113.21709275245667,  true_positive: 337, true_negative: 336, false_positive: 39, false_negative: 38, sensitivity: 0.8986666666666666,  specificity: 0.896, precision: 0.8962765957446809,  accuracy: 0.8973333333333333,  error: 0.10266666666666668, f1: 0.8974700399467377
2021-11-25 14:55:30,432 INFO - efficientnetb5.__init__() : Algorithm initialized
2021-11-25 14:55:30,433 INFO - efficientnetb5.start() : Training started
2021-11-25 15:07:32,989 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 15:09:59,950 INFO - efficientnetb5.start() : Training completed
2021-11-25 15:09:59,950 INFO - efficientnetb5.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.3427905738353729, 0.1898527443408966], 'accuracy': [0.8505747318267822, 0.9333333373069763], 'val_loss': [0.29374223947525024, 0.28965431451797485], 'val_accuracy': [0.8693333268165588, 0.8759999871253967]}
2021-11-25 15:09:59,950 INFO - efficientnetb5.start() : Prediction started
2021-11-25 15:12:37,156 INFO - efficientnetb5.start() : Prediction completed
2021-11-25 15:12:37,733 INFO - efficientnetb5.start() : Prediction results: method: EfficientNetB5, description: ,  train_time: 869.516961812973, predict_time: 157.20582628250122,  true_positive: 333, true_negative: 324, false_positive: 51, false_negative: 42, sensitivity: 0.888,  specificity: 0.864, precision: 0.8671875,  accuracy: 0.876,  error: 0.124, f1: 0.8774703557312253
2021-11-25 15:12:47,099 INFO - efficientnetb6.__init__() : Algorithm initialized
2021-11-25 15:12:47,100 INFO - efficientnetb6.start() : Training started
2021-11-25 15:28:30,773 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 15:31:45,625 INFO - efficientnetb6.start() : Training completed
2021-11-25 15:31:45,626 INFO - efficientnetb6.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.3586369454860687, 0.22765283286571503], 'accuracy': [0.835488498210907, 0.9666666388511658], 'val_loss': [0.3015833795070648, 0.3087303638458252], 'val_accuracy': [0.8759999871253967, 0.862666666507721]}
2021-11-25 15:31:45,626 INFO - efficientnetb6.start() : Prediction started
2021-11-25 15:35:09,987 INFO - efficientnetb6.start() : Prediction completed
2021-11-25 15:35:10,539 INFO - efficientnetb6.start() : Prediction results: method: EfficientNetB6, description: ,  train_time: 1138.52454662323, predict_time: 204.35986018180847,  true_positive: 307, true_negative: 340, false_positive: 35, false_negative: 68, sensitivity: 0.8186666666666667,  specificity: 0.9066666666666666, precision: 0.8976608187134503,  accuracy: 0.8626666666666667,  error: 0.1373333333333333, f1: 0.8563458856345885
2021-11-25 15:35:22,791 INFO - efficientnetb7.__init__() : Algorithm initialized
2021-11-25 15:35:22,791 INFO - efficientnetb7.start() : Training started
2021-11-25 15:57:08,507 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:01:35,722 INFO - efficientnetb7.start() : Training completed
2021-11-25 16:01:35,722 INFO - efficientnetb7.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.32394132018089294, 0.3003581464290619], 'accuracy': [0.8656609058380127, 0.8333333134651184], 'val_loss': [0.2718040645122528, 0.2925308644771576], 'val_accuracy': [0.890666663646698, 0.8866666555404663]}
2021-11-25 16:01:35,723 INFO - efficientnetb7.start() : Prediction started
2021-11-25 16:06:13,031 INFO - efficientnetb7.start() : Prediction completed
2021-11-25 16:06:13,629 INFO - efficientnetb7.start() : Prediction results: method: EfficientNetB7, description: ,  train_time: 1572.9310340881348, predict_time: 277.307879447937,  true_positive: 311, true_negative: 354, false_positive: 21, false_negative: 64, sensitivity: 0.8293333333333334,  specificity: 0.944, precision: 0.9367469879518072,  accuracy: 0.8866666666666667,  error: 0.11333333333333329, f1: 0.8797736916548797
2021-11-25 16:06:22,703 INFO - inceptionresnetv2.__init__() : Algorithm initialized
2021-11-25 16:06:22,704 INFO - inceptionresnetv2.start() : Training started
2021-11-25 16:15:09,004 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:16:55,547 INFO - inceptionresnetv2.start() : Training completed
2021-11-25 16:16:55,548 INFO - inceptionresnetv2.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [143.78640747070312, 20.25313377380371], 'accuracy': [0.5204741358757019, 0.6000000238418579], 'val_loss': [23.742534637451172, 168.25747680664062], 'val_accuracy': [0.562666654586792, 0.5]}
2021-11-25 16:16:55,548 INFO - inceptionresnetv2.start() : Prediction started
2021-11-25 16:18:51,075 INFO - inceptionresnetv2.start() : Prediction completed
2021-11-25 16:18:51,635 INFO - inceptionresnetv2.start() : Prediction results: method: InceptionResNetV2, description: ,  train_time: 632.8430209159851, predict_time: 115.52685976028442,  true_positive: 0, true_negative: 375, false_positive: 0, false_negative: 375, sensitivity: 0.0,  specificity: 1.0, precision: 0.0,  accuracy: 0.5,  error: 0.5, f1: 0.0
2021-11-25 16:18:55,352 INFO - inceptionv3.__init__() : Algorithm initialized
2021-11-25 16:18:55,353 INFO - inceptionv3.start() : Training started
2021-11-25 16:22:55,266 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:23:44,194 INFO - inceptionv3.start() : Training completed
2021-11-25 16:23:44,195 INFO - inceptionv3.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [6.408389091491699, 2.3774185180664062], 'accuracy': [0.665229856967926, 0.7666666507720947], 'val_loss': [4.700658798217773, 2.633174419403076], 'val_accuracy': [0.6706666946411133, 0.7680000066757202]}
2021-11-25 16:23:44,195 INFO - inceptionv3.start() : Prediction started
2021-11-25 16:24:37,051 INFO - inceptionv3.start() : Prediction completed
2021-11-25 16:24:37,583 INFO - inceptionv3.start() : Prediction results: method: InceptionV3, description: ,  train_time: 288.8414409160614, predict_time: 52.85634422302246,  true_positive: 305, true_negative: 271, false_positive: 104, false_negative: 70, sensitivity: 0.8133333333333334,  specificity: 0.7226666666666667, precision: 0.7457212713936431,  accuracy: 0.768,  error: 0.23199999999999998, f1: 0.7780612244897959
2021-11-25 16:24:38,592 INFO - mobilenet.__init__() : Algorithm initialized
2021-11-25 16:24:38,592 INFO - mobilenet.start() : Training started
2021-11-25 16:26:30,742 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:26:53,323 INFO - mobilenet.start() : Training completed
2021-11-25 16:26:53,324 INFO - mobilenet.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.4425849914550781, 0.4697329103946686], 'accuracy': [0.7887930870056152, 0.699999988079071], 'val_loss': [0.38678237795829773, 0.5250052809715271], 'val_accuracy': [0.8213333487510681, 0.7453333139419556]}
2021-11-25 16:26:53,324 INFO - mobilenet.start() : Prediction started
2021-11-25 16:27:17,936 INFO - mobilenet.start() : Prediction completed
2021-11-25 16:27:18,523 INFO - mobilenet.start() : Prediction results: method: MobileNet, description: ,  train_time: 134.73061203956604, predict_time: 24.612327814102173,  true_positive: 208, true_negative: 351, false_positive: 24, false_negative: 167, sensitivity: 0.5546666666666666,  specificity: 0.936, precision: 0.896551724137931,  accuracy: 0.7453333333333333,  error: 0.2546666666666667, f1: 0.6853377265238879
2021-11-25 16:27:20,281 INFO - mobilenetv2.__init__() : Algorithm initialized
2021-11-25 16:27:20,281 INFO - mobilenetv2.start() : Training started
2021-11-25 16:29:12,922 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:29:35,836 INFO - mobilenetv2.start() : Training completed
2021-11-25 16:29:35,836 INFO - mobilenetv2.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.45788824558258057, 0.2837994396686554], 'accuracy': [0.772270143032074, 0.8999999761581421], 'val_loss': [0.3997277021408081, 0.4012107253074646], 'val_accuracy': [0.8040000200271606, 0.8040000200271606]}
2021-11-25 16:29:35,836 INFO - mobilenetv2.start() : Prediction started
2021-11-25 16:30:01,938 INFO - mobilenetv2.start() : Prediction completed
2021-11-25 16:30:02,486 INFO - mobilenetv2.start() : Prediction results: method: MobileNetV2, description: ,  train_time: 135.55355620384216, predict_time: 26.101365566253662,  true_positive: 299, true_negative: 304, false_positive: 71, false_negative: 76, sensitivity: 0.7973333333333333,  specificity: 0.8106666666666666, precision: 0.8081081081081081,  accuracy: 0.804,  error: 0.19599999999999995, f1: 0.8026845637583893
2021-11-25 16:30:05,876 INFO - mobilenetv3large.__init__() : Algorithm initialized
2021-11-25 16:30:05,877 INFO - mobilenetv3large.start() : Training started
2021-11-25 16:31:54,791 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:32:16,308 INFO - mobilenetv3large.start() : Training completed
2021-11-25 16:32:16,308 INFO - mobilenetv3large.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.4733155369758606, 0.2284342497587204], 'accuracy': [0.774784505367279, 0.9666666388511658], 'val_loss': [0.28625091910362244, 0.4275631904602051], 'val_accuracy': [0.8733333349227905, 0.8053333163261414]}
2021-11-25 16:32:16,309 INFO - mobilenetv3large.start() : Prediction started
2021-11-25 16:32:41,413 INFO - mobilenetv3large.start() : Prediction completed
2021-11-25 16:32:42,042 INFO - mobilenetv3large.start() : Prediction results: method: MobileNetV3Large, description: ,  train_time: 130.4306800365448, predict_time: 25.103965997695923,  true_positive: 234, true_negative: 370, false_positive: 5, false_negative: 141, sensitivity: 0.624,  specificity: 0.9866666666666667, precision: 0.9790794979079498,  accuracy: 0.8053333333333333,  error: 0.19466666666666665, f1: 0.762214983713355
2021-11-25 16:32:44,062 INFO - mobilenetv3small.__init__() : Algorithm initialized
2021-11-25 16:32:44,062 INFO - mobilenetv3small.start() : Training started
2021-11-25 16:33:29,541 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:33:37,909 INFO - mobilenetv3small.start() : Training completed
2021-11-25 16:33:37,909 INFO - mobilenetv3small.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.45087960362434387, 0.19648799300193787], 'accuracy': [0.7844827771186829, 0.9333333373069763], 'val_loss': [0.3820848762989044, 0.370635986328125], 'val_accuracy': [0.8253333568572998, 0.8373333215713501]}
2021-11-25 16:33:37,910 INFO - mobilenetv3small.start() : Prediction started
2021-11-25 16:33:49,259 INFO - mobilenetv3small.start() : Prediction completed
2021-11-25 16:33:49,769 INFO - mobilenetv3small.start() : Prediction results: method: MobileNetV3Small, description: ,  train_time: 53.84596562385559, predict_time: 11.349020004272461,  true_positive: 266, true_negative: 362, false_positive: 13, false_negative: 109, sensitivity: 0.7093333333333334,  specificity: 0.9653333333333334, precision: 0.953405017921147,  accuracy: 0.8373333333333334,  error: 0.16266666666666663, f1: 0.8134556574923548
2021-11-25 16:33:55,261 INFO - resnet101.__init__() : Algorithm initialized
2021-11-25 16:33:55,261 INFO - resnet101.start() : Training started
2021-11-25 16:45:38,607 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 16:48:03,938 INFO - resnet101.start() : Training completed
2021-11-25 16:48:03,939 INFO - resnet101.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.363895982503891, 0.1831624060869217], 'accuracy': [0.8441091775894165, 0.8999999761581421], 'val_loss': [0.33422064781188965, 0.2414681762456894], 'val_accuracy': [0.8653333187103271, 0.9039999842643738]}
2021-11-25 16:48:03,939 INFO - resnet101.start() : Prediction started
2021-11-25 16:50:34,233 INFO - resnet101.start() : Prediction completed
2021-11-25 16:50:34,783 INFO - resnet101.start() : Prediction results: method: ResNet101, description: ,  train_time: 848.6765756607056, predict_time: 150.29314970970154,  true_positive: 343, true_negative: 335, false_positive: 40, false_negative: 32, sensitivity: 0.9146666666666666,  specificity: 0.8933333333333333, precision: 0.8955613577023499,  accuracy: 0.904,  error: 0.09599999999999997, f1: 0.9050131926121372
2021-11-25 16:50:40,080 INFO - resnet101v2.__init__() : Algorithm initialized
2021-11-25 16:50:40,081 INFO - resnet101v2.start() : Training started
2021-11-25 17:01:09,208 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 17:03:19,723 INFO - resnet101v2.start() : Training completed
2021-11-25 17:03:19,723 INFO - resnet101v2.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [53.9129638671875, 30.016454696655273], 'accuracy': [0.5125718116760254, 0.5333333611488342], 'val_loss': [33.64557647705078, 44.684268951416016], 'val_accuracy': [0.5066666603088379, 0.5]}
2021-11-25 17:03:19,723 INFO - resnet101v2.start() : Prediction started
2021-11-25 17:05:34,717 INFO - resnet101v2.start() : Prediction completed
2021-11-25 17:05:35,243 INFO - resnet101v2.start() : Prediction results: method: ResNet101V2, description: ,  train_time: 759.6407182216644, predict_time: 134.99259233474731,  true_positive: 370, true_negative: 5, false_positive: 370, false_negative: 5, sensitivity: 0.9866666666666667,  specificity: 0.013333333333333334, precision: 0.5,  accuracy: 0.5,  error: 0.5, f1: 0.663677130044843
2021-11-25 17:05:44,102 INFO - resnet152.__init__() : Algorithm initialized
2021-11-25 17:05:44,102 INFO - resnet152.start() : Training started
2021-11-25 17:22:38,091 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 17:26:08,285 INFO - resnet152.start() : Training completed
2021-11-25 17:26:08,286 INFO - resnet152.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.31883570551872253, 0.30303525924682617], 'accuracy': [0.8653017282485962, 0.8999999761581421], 'val_loss': [0.30211761593818665, 0.22455091774463654], 'val_accuracy': [0.8893333077430725, 0.8999999761581421]}
2021-11-25 17:26:08,286 INFO - resnet152.start() : Prediction started
2021-11-25 17:29:45,601 INFO - resnet152.start() : Prediction completed
2021-11-25 17:29:46,131 INFO - resnet152.start() : Prediction results: method: ResNet152, description: ,  train_time: 1224.1828150749207, predict_time: 217.31488466262817,  true_positive: 357, true_negative: 318, false_positive: 57, false_negative: 18, sensitivity: 0.952,  specificity: 0.848, precision: 0.8623188405797102,  accuracy: 0.9,  error: 0.09999999999999998, f1: 0.9049429657794676
2021-11-25 17:29:53,644 INFO - resnet152v2.__init__() : Algorithm initialized
2021-11-25 17:29:53,646 INFO - resnet152v2.start() : Training started
2021-11-25 17:45:37,527 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 17:48:51,103 INFO - resnet152v2.start() : Training completed
2021-11-25 17:48:51,104 INFO - resnet152v2.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [131.9561767578125, 155.3850555419922], 'accuracy': [0.5086206793785095, 0.5], 'val_loss': [167.5477752685547, 26.458328247070312], 'val_accuracy': [0.5, 0.590666651725769]}
2021-11-25 17:48:51,104 INFO - resnet152v2.start() : Prediction started
2021-11-25 17:52:13,329 INFO - resnet152v2.start() : Prediction completed
2021-11-25 17:52:13,897 INFO - resnet152v2.start() : Prediction results: method: ResNet152V2, description: ,  train_time: 1137.4573013782501, predict_time: 202.22441744804382,  true_positive: 105, true_negative: 338, false_positive: 37, false_negative: 270, sensitivity: 0.28,  specificity: 0.9013333333333333, precision: 0.7394366197183099,  accuracy: 0.5906666666666667,  error: 0.4093333333333333, f1: 0.4061895551257254
2021-11-25 17:52:17,714 INFO - resnet50.__init__() : Algorithm initialized
2021-11-25 17:52:17,715 INFO - resnet50.start() : Training started
2021-11-25 17:59:05,474 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 18:00:30,515 INFO - resnet50.start() : Training completed
2021-11-25 18:00:30,515 INFO - resnet50.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.4130489230155945, 0.2963843047618866], 'accuracy': [0.8139367699623108, 0.8333333134651184], 'val_loss': [0.26850733160972595, 0.2604886591434479], 'val_accuracy': [0.8826666474342346, 0.890666663646698]}
2021-11-25 18:00:30,516 INFO - resnet50.start() : Prediction started
2021-11-25 18:01:59,005 INFO - resnet50.start() : Prediction completed
2021-11-25 18:01:59,551 INFO - resnet50.start() : Prediction results: method: ResNet50, description: ,  train_time: 492.8001980781555, predict_time: 88.48853898048401,  true_positive: 342, true_negative: 326, false_positive: 49, false_negative: 33, sensitivity: 0.912,  specificity: 0.8693333333333333, precision: 0.8746803069053708,  accuracy: 0.8906666666666667,  error: 0.10933333333333328, f1: 0.8929503916449086
2021-11-25 18:02:02,259 INFO - resnet50v2.__init__() : Algorithm initialized
2021-11-25 18:02:02,259 INFO - resnet50v2.start() : Training started
2021-11-25 18:07:51,165 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 18:09:02,080 INFO - resnet50v2.start() : Training completed
2021-11-25 18:09:02,081 INFO - resnet50v2.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [14.76237964630127, 7.2719831466674805], 'accuracy': [0.610991358757019, 0.699999988079071], 'val_loss': [8.82603645324707, 10.352936744689941], 'val_accuracy': [0.6506666541099548, 0.6919999718666077]}
2021-11-25 18:09:02,081 INFO - resnet50v2.start() : Prediction started
2021-11-25 18:10:16,251 INFO - resnet50v2.start() : Prediction completed
2021-11-25 18:10:16,818 INFO - resnet50v2.start() : Prediction results: method: ResNet50V2, description: ,  train_time: 419.82049345970154, predict_time: 74.17050051689148,  true_positive: 362, true_negative: 157, false_positive: 218, false_negative: 13, sensitivity: 0.9653333333333334,  specificity: 0.4186666666666667, precision: 0.6241379310344828,  accuracy: 0.692,  error: 0.30800000000000005, f1: 0.7581151832460734
2021-11-25 18:10:17,634 INFO - vgg16.__init__() : Algorithm initialized
2021-11-25 18:10:17,634 INFO - vgg16.start() : Training started
2021-11-25 18:31:12,039 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 18:35:07,504 INFO - vgg16.start() : Training completed
2021-11-25 18:35:07,504 INFO - vgg16.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.683914840221405, 0.13693870604038239], 'accuracy': [0.756465494632721, 0.9333333373069763], 'val_loss': [0.5047877430915833, 0.5107764601707458], 'val_accuracy': [0.8266666531562805, 0.8386666774749756]}
2021-11-25 18:35:07,505 INFO - vgg16.start() : Prediction started
2021-11-25 18:38:59,474 INFO - vgg16.start() : Prediction completed
2021-11-25 18:39:00,121 INFO - vgg16.start() : Prediction results: method: VGG16, description: ,  train_time: 1489.8686485290527, predict_time: 231.96897912025452,  true_positive: 303, true_negative: 326, false_positive: 49, false_negative: 72, sensitivity: 0.808,  specificity: 0.8693333333333333, precision: 0.8607954545454546,  accuracy: 0.8386666666666667,  error: 0.16133333333333333, f1: 0.8335625859697386
2021-11-25 18:39:01,237 INFO - vgg19.__init__() : Algorithm initialized
2021-11-25 18:39:01,238 INFO - vgg19.start() : Training started
2021-11-25 19:03:14,555 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 19:11:23,839 INFO - vgg19.start() : Training completed
2021-11-25 19:11:23,839 INFO - vgg19.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [0.6853851079940796, 0.4037012755870819], 'accuracy': [0.7658045887947083, 0.8333333134651184], 'val_loss': [0.5083707571029663, 0.5013716816902161], 'val_accuracy': [0.8266666531562805, 0.8266666531562805]}
2021-11-25 19:11:23,840 INFO - vgg19.start() : Prediction started
2021-11-25 19:18:48,348 INFO - vgg19.start() : Prediction completed
2021-11-25 19:18:50,014 INFO - vgg19.start() : Prediction results: method: VGG19, description: ,  train_time: 1942.6000728607178, predict_time: 444.50807785987854,  true_positive: 270, true_negative: 350, false_positive: 25, false_negative: 105, sensitivity: 0.72,  specificity: 0.9333333333333333, precision: 0.9152542372881356,  accuracy: 0.8266666666666667,  error: 0.17333333333333334, f1: 0.8059701492537312
2021-11-25 19:19:03,331 INFO - xception.__init__() : Algorithm initialized
2021-11-25 19:19:03,337 INFO - xception.start() : Training started
2021-11-25 19:29:14,934 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 696 batches). You may need to use the repeat() function when building your dataset.
2021-11-25 19:31:14,926 INFO - xception.start() : Training completed
2021-11-25 19:31:14,926 INFO - xception.start() : Training results: {'verbose': 1, 'epochs': 8, 'steps': 87}{'loss': [4.133981704711914, 10.473226547241211], 'accuracy': [0.679238498210907, 0.5333333611488342], 'val_loss': [7.123522758483887, 5.2288899421691895], 'val_accuracy': [0.5986666679382324, 0.5773333311080933]}
2021-11-25 19:31:14,926 INFO - xception.start() : Prediction started
2021-11-25 19:33:19,968 INFO - xception.start() : Prediction completed
2021-11-25 19:33:20,628 INFO - xception.start() : Prediction results: method: Xception, description: ,  train_time: 731.5880994796753, predict_time: 125.04174089431763,  true_positive: 68, true_negative: 365, false_positive: 10, false_negative: 307, sensitivity: 0.18133333333333335,  specificity: 0.9733333333333334, precision: 0.8717948717948718,  accuracy: 0.5773333333333334,  error: 0.42266666666666663, f1: 0.3002207505518764
