2021-11-27 21:18:54,938 INFO - statictics.__init__() : Statistics initialized
2021-11-27 21:18:54,951 INFO - statictics.__init__() : Added link to history
2021-11-27 21:18:54,954 INFO - statictics.__init__() : History send to GIT
2021-11-27 21:18:55,352 INFO - data.__prepare() : Data prepared
2021-11-27 21:18:55,405 INFO - data.__augment() : Data augmented
2021-11-27 21:18:55,857 INFO - data.__copy() : Data copied
2021-11-27 21:18:56,405 INFO - data.__read() : Data prepared for algorithms
2021-11-27 21:18:56,506 INFO - data.__preprocess() : Data prepared for neural networks
2021-11-27 21:19:01,779 INFO - densenet121.__init__() : Algorithm initialized
2021-11-27 21:19:01,779 INFO - densenet121.start() : Training started
2021-11-27 21:19:37,971 INFO - densenet121.start() : Training completed
2021-11-27 21:19:37,972 INFO - densenet121.start() : Training results: {'verbose': 1, 'epochs': 1, 'steps': 4}{'loss': [2.1913301944732666], 'accuracy': [0.4921875], 'val_loss': [1.4081348180770874], 'val_accuracy': [0.46000000834465027]}
2021-11-27 21:19:38,887 INFO - densenet121.start() : Model saved
2021-11-27 21:19:38,887 INFO - densenet121.start() : Prediction started
2021-11-27 21:19:51,135 INFO - densenet121.start() : Prediction completed
2021-11-27 21:19:51,832 INFO - densenet121.start() : Prediction results: method: DenseNet121, description: ,  train_time: 36.19130778312683, predict_time: 12.247246503829956,  true_positive: 1, true_negative: 22, false_positive: 3, false_negative: 24, sensitivity: 0.04,  specificity: 0.88, precision: 0.25,  accuracy: 0.46,  error: 0.54, f1: 0.06896551724137932, myScore1: 0.3826679438058749, myScore2: 0.0019055823474147164, myScore3: 0.0056311038746392865
2021-11-27 21:19:54,967 INFO - statictics.insert() : History send to GIT
2021-11-27 21:20:04,999 INFO - densenet169.__init__() : Algorithm initialized
2021-11-27 21:20:04,999 INFO - densenet169.start() : Training started
2021-11-27 21:21:05,301 INFO - densenet169.start() : Training completed
2021-11-27 21:21:05,301 INFO - densenet169.start() : Training results: {'verbose': 1, 'epochs': 1, 'steps': 4}{'loss': [1.8942455053329468], 'accuracy': [0.6640625], 'val_loss': [3.308022975921631], 'val_accuracy': [0.5]}
2021-11-27 21:21:06,882 INFO - densenet169.start() : Model saved
2021-11-27 21:21:06,882 INFO - densenet169.start() : Prediction started
2021-11-27 21:21:23,245 INFO - densenet169.start() : Prediction completed
2021-11-27 21:21:23,884 INFO - densenet169.start() : Prediction results: method: DenseNet169, description: ,  train_time: 60.301446199417114, predict_time: 16.36218571662903,  true_positive: 25, true_negative: 0, false_positive: 25, false_negative: 0, sensitivity: 1.0,  specificity: 0.0, precision: 0.5,  accuracy: 0.5,  error: 0.5, f1: 0.6666666666666666, myScore1: 0.7333333333333334, myScore2: 0.011055566801200711, myScore3: 0.040744352754114484
2021-11-27 21:21:26,996 INFO - statictics.insert() : History send to GIT
2021-11-27 21:21:35,981 INFO - densenet201.__init__() : Algorithm initialized
2021-11-27 21:21:35,982 INFO - densenet201.start() : Training started
2021-11-27 21:22:35,880 INFO - densenet201.start() : Training completed
2021-11-27 21:22:35,880 INFO - densenet201.start() : Training results: {'verbose': 1, 'epochs': 1, 'steps': 4}{'loss': [1.4966245889663696], 'accuracy': [0.484375], 'val_loss': [1.2268047332763672], 'val_accuracy': [0.47999998927116394]}
2021-11-27 21:22:37,958 INFO - densenet201.start() : Model saved
2021-11-27 21:22:37,959 INFO - densenet201.start() : Prediction started
2021-11-27 21:22:48,491 WARNING - def_function.called_with_tracing() : 5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x0000029AB6A07550> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2021-11-27 21:22:57,753 WARNING - def_function.called_with_tracing() : 6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x0000029AB6A07550> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
2021-11-27 21:22:57,756 INFO - densenet201.start() : Prediction completed
2021-11-27 21:22:58,441 INFO - densenet201.start() : Prediction results: method: DenseNet201, description: ,  train_time: 59.89784526824951, predict_time: 19.797409057617188,  true_positive: 0, true_negative: 24, false_positive: 1, false_negative: 25, sensitivity: 0.0,  specificity: 0.96, precision: 0.0,  accuracy: 0.48,  error: 0.52, f1: 0.0, myScore1: 0.3363076923076923, myScore2: 0.0, myScore3: 0.0
2021-11-27 21:23:01,528 INFO - statictics.insert() : History send to GIT
2021-11-27 21:23:05,345 INFO - efficientnetb0.__init__() : Algorithm initialized
2021-11-27 21:23:05,346 INFO - efficientnetb0.start() : Training started
2021-11-27 21:23:27,629 INFO - efficientnetb0.start() : Training completed
2021-11-27 21:23:27,630 INFO - efficientnetb0.start() : Training results: {'verbose': 1, 'epochs': 1, 'steps': 4}{'loss': [0.645028829574585], 'accuracy': [0.5859375], 'val_loss': [0.5162320137023926], 'val_accuracy': [0.7799999713897705]}
2021-11-27 21:23:28,175 INFO - efficientnetb0.start() : Model saved
2021-11-27 21:23:28,176 INFO - efficientnetb0.start() : Prediction started
2021-11-27 21:23:35,419 INFO - efficientnetb0.start() : Prediction completed
2021-11-27 21:23:36,052 INFO - efficientnetb0.start() : Prediction results: method: EfficientNetB0, description: ,  train_time: 22.28289222717285, predict_time: 7.243022203445435,  true_positive: 17, true_negative: 22, false_positive: 3, false_negative: 8, sensitivity: 0.68,  specificity: 0.88, precision: 0.85,  accuracy: 0.78,  error: 0.21999999999999997, f1: 0.7555555555555556, myScore1: 1.1513232323232325, myScore2: 0.03390742762890511, myScore3: 0.10431495780810189
