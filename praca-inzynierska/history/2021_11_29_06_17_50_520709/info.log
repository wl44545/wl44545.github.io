2021-11-29 06:17:50,521 INFO - statictics.__init__() : Statistics initialized
2021-11-29 06:17:50,522 INFO - statictics.__init__() : Added link to history
2021-11-29 06:17:50,559 INFO - statictics.__init__() : History send to GIT
2021-11-29 06:17:55,634 INFO - data.__prepare() : Data prepared
2021-11-29 06:17:59,651 INFO - data.__augment() : Data augmented
2021-11-29 06:18:03,251 INFO - data.__copy() : Data copied
2021-11-29 06:18:09,000 INFO - data.__read() : Data prepared for algorithms
2021-11-29 06:18:09,196 INFO - data.__preprocess() : Data prepared for neural networks
2021-11-29 06:18:09,197 INFO - discrete_nbc.__init__() : Algorithm initialized
2021-11-29 06:18:29,559 INFO - discrete_nbc.start() : Training started
2021-11-29 06:28:54,756 INFO - discrete_nbc.start() : Training completed
2021-11-29 06:28:54,757 INFO - discrete_nbc.start() : Prediction started
2021-11-29 06:33:27,989 INFO - discrete_nbc.start() : Prediction completed
2021-11-29 06:38:04,907 INFO - discrete_nbc.start() : Prediction results: method: DiscreteNBC, description: DiscreteNBC,  train_time: 625.1967387199402, predict_time: 273.2321925163269,  true_positive: 217, true_negative: 146, false_positive: 104, false_negative: 33, sensitivity: 0.868,  specificity: 0.584, precision: 0.67601246105919,  accuracy: 0.726,  error: 0.274, f1: 0.7600700525394045, myScore1: 1.0303997760252563, myScore2: 0.0012157293943912933, myScore3: 0.0027817734269873296
2021-11-29 06:38:28,239 INFO - statictics.insert() : History send to GIT
2021-11-29 06:38:28,240 INFO - real_boost.__init__() : Algorithm initialized
2021-11-29 06:38:28,241 INFO - real_boost.start() : Training started
2021-11-29 07:58:32,035 INFO - real_boost.start() : Training completed
2021-11-29 07:58:32,036 INFO - real_boost.start() : Prediction started
2021-11-29 07:58:32,134 INFO - real_boost.start() : Prediction completed
2021-11-29 07:58:32,869 INFO - real_boost.start() : Prediction results: method: RealBoost, description: An RealBoost classifier,  train_time: 4803.794079780579, predict_time: 0.09740614891052246,  true_positive: 207, true_negative: 188, false_positive: 62, false_negative: 43, sensitivity: 0.828,  specificity: 0.752, precision: 0.7695167286245354,  accuracy: 0.79,  error: 0.20999999999999996, f1: 0.7976878612716762, myScore1: 1.188986079688768, myScore2: 0.00016605371671304277, myScore3: 8.189296776371217
2021-11-29 07:58:37,760 INFO - statictics.insert() : History send to GIT
2021-11-29 07:58:37,761 INFO - bernoulli_nbc.__init__() : Algorithm initialized
2021-11-29 07:58:37,761 INFO - bernoulli_nbc.start() : Training started
2021-11-29 07:58:46,530 INFO - bernoulli_nbc.start() : Training completed
2021-11-29 07:58:46,530 INFO - bernoulli_nbc.start() : Prediction started
2021-11-29 07:58:48,015 INFO - bernoulli_nbc.start() : Prediction completed
2021-11-29 07:58:50,199 INFO - bernoulli_nbc.start() : Prediction results: method: BernoulliNBC, description: Naive Bayes classifier for multivariate Bernoulli models,  train_time: 8.767533779144287, predict_time: 1.4847476482391357,  true_positive: 209, true_negative: 67, false_positive: 183, false_negative: 41, sensitivity: 0.836,  specificity: 0.268, precision: 0.5331632653061225,  accuracy: 0.552,  error: 0.44799999999999995, f1: 0.6510903426791277, myScore1: 0.7676757835844618, myScore2: 0.07426151516266803, myScore3: 0.4385191944579272
2021-11-29 07:58:52,912 INFO - statictics.insert() : History send to GIT
2021-11-29 07:58:52,913 INFO - complement_nbc.__init__() : Algorithm initialized
2021-11-29 07:58:52,913 INFO - complement_nbc.start() : Training started
2021-11-29 07:58:59,778 INFO - complement_nbc.start() : Training completed
2021-11-29 07:58:59,779 INFO - complement_nbc.start() : Prediction started
2021-11-29 07:59:00,675 INFO - complement_nbc.start() : Prediction completed
2021-11-29 07:59:02,120 INFO - complement_nbc.start() : Prediction results: method: ComplementNBC, description: The Complement Naive Bayes classifier described in Rennie et al,  train_time: 6.865841627120972, predict_time: 0.8961398601531982,  true_positive: 200, true_negative: 122, false_positive: 128, false_negative: 50, sensitivity: 0.8,  specificity: 0.488, precision: 0.6097560975609756,  accuracy: 0.644,  error: 0.356, f1: 0.6920415224913495, myScore1: 0.8810952474062668, myScore2: 0.10079485663603062, myScore3: 0.7722472275399541
2021-11-29 07:59:05,070 INFO - statictics.insert() : History send to GIT
2021-11-29 07:59:05,070 INFO - gaussian_nbc.__init__() : Algorithm initialized
2021-11-29 07:59:05,071 INFO - gaussian_nbc.start() : Training started
2021-11-29 07:59:15,712 INFO - gaussian_nbc.start() : Training completed
2021-11-29 07:59:15,712 INFO - gaussian_nbc.start() : Prediction started
2021-11-29 07:59:20,402 INFO - gaussian_nbc.start() : Prediction completed
2021-11-29 07:59:25,831 INFO - gaussian_nbc.start() : Prediction results: method: GaussianNBC, description: Gaussian Naive Bayes (GaussianNB),  train_time: 10.640780448913574, predict_time: 4.688637971878052,  true_positive: 206, true_negative: 133, false_positive: 117, false_negative: 44, sensitivity: 0.824,  specificity: 0.532, precision: 0.6377708978328174,  accuracy: 0.678,  error: 0.32199999999999995, f1: 0.719022687609075, myScore1: 0.9372474397989994, myScore2: 0.06757236379992101, myScore3: 0.1533542772808854
2021-11-29 07:59:28,568 INFO - statictics.insert() : History send to GIT
2021-11-29 07:59:28,569 INFO - multinomial_nbc.__init__() : Algorithm initialized
2021-11-29 07:59:28,569 INFO - multinomial_nbc.start() : Training started
2021-11-29 07:59:35,510 INFO - multinomial_nbc.start() : Training completed
2021-11-29 07:59:35,511 INFO - multinomial_nbc.start() : Prediction started
2021-11-29 07:59:36,364 INFO - multinomial_nbc.start() : Prediction completed
2021-11-29 07:59:37,811 INFO - multinomial_nbc.start() : Prediction results: method: MultinomialNBC, description: Naive Bayes classifier for multinomial models,  train_time: 6.94049072265625, predict_time: 0.8525350093841553,  true_positive: 200, true_negative: 122, false_positive: 128, false_negative: 50, sensitivity: 0.8,  specificity: 0.488, precision: 0.6097560975609756,  accuracy: 0.644,  error: 0.356, f1: 0.6920415224913495, myScore1: 0.8810952474062668, myScore2: 0.09971074815103173, myScore3: 0.8117455762799216
2021-11-29 07:59:40,545 INFO - statictics.insert() : History send to GIT
2021-11-29 07:59:40,545 INFO - k_neighbors.__init__() : Algorithm initialized
2021-11-29 07:59:40,546 INFO - k_neighbors.start() : Training started
2021-11-29 07:59:40,874 INFO - k_neighbors.start() : Training completed
2021-11-29 07:59:40,875 INFO - k_neighbors.start() : Prediction started
2021-11-29 07:59:53,058 INFO - k_neighbors.start() : Prediction completed
2021-11-29 08:00:05,660 INFO - k_neighbors.start() : Prediction results: method: KNeighborsClassifier, description: Classifier implementing the k-nearest neighbors vote,  train_time: 0.3274211883544922, predict_time: 12.1827712059021,  true_positive: 214, true_negative: 186, false_positive: 64, false_negative: 36, sensitivity: 0.856,  specificity: 0.744, precision: 0.7697841726618705,  accuracy: 0.8,  error: 0.19999999999999996, f1: 0.8106060606060607, myScore1: 1.2222814475692174, myScore2: 2.4757287843217837, myScore3: 0.06653708314027536
2021-11-29 08:00:08,716 INFO - statictics.insert() : History send to GIT
2021-11-29 08:00:08,716 INFO - linear_svm.__init__() : Algorithm initialized
2021-11-29 08:00:08,717 INFO - linear_svm.start() : Training started
2021-11-29 08:10:58,808 INFO - linear_svm.start() : Training completed
2021-11-29 08:10:58,818 INFO - linear_svm.start() : Prediction started
2021-11-29 08:11:00,111 INFO - linear_svm.start() : Prediction completed
2021-11-29 08:11:01,860 INFO - linear_svm.start() : Prediction results: method: LinearSVM, description: Linear Support Vector Classification,  train_time: 650.0855538845062, predict_time: 1.2924134731292725,  true_positive: 205, true_negative: 200, false_positive: 50, false_negative: 45, sensitivity: 0.82,  specificity: 0.8, precision: 0.803921568627451,  accuracy: 0.81,  error: 0.18999999999999995, f1: 0.8118811881188118, myScore1: 1.2556485403958355, myScore2: 0.0012488836019621044, myScore3: 0.6281899755757221
2021-11-29 08:11:05,127 INFO - statictics.insert() : History send to GIT
2021-11-29 08:11:05,132 INFO - nonlinear_svm.__init__() : Algorithm initialized
2021-11-29 08:11:05,133 INFO - nonlinear_svm.start() : Training started
2021-11-29 08:15:05,225 INFO - nonlinear_svm.start() : Training completed
2021-11-29 08:15:05,225 INFO - nonlinear_svm.start() : Prediction started
2021-11-29 08:18:02,852 INFO - nonlinear_svm.start() : Prediction completed
2021-11-29 08:21:00,590 INFO - nonlinear_svm.start() : Prediction results: method: NonLinearSVM, description: Non Linear Support Vector Classification,  train_time: 240.091956615448, predict_time: 177.62564849853516,  true_positive: 218, true_negative: 190, false_positive: 60, false_negative: 32, sensitivity: 0.872,  specificity: 0.76, precision: 0.7841726618705036,  accuracy: 0.816,  error: 0.18400000000000005, f1: 0.8257575757575759, myScore1: 1.2795743149354033, myScore2: 0.0034393387741855114, myScore3: 0.00464886452343838
2021-11-29 08:21:03,796 INFO - statictics.insert() : History send to GIT
2021-11-29 08:21:03,801 INFO - ada_boost.__init__() : Algorithm initialized
2021-11-29 08:21:03,801 INFO - ada_boost.start() : Training started
2021-11-29 08:57:35,772 INFO - ada_boost.start() : Training completed
2021-11-29 08:57:35,773 INFO - ada_boost.start() : Prediction started
2021-11-29 08:58:01,128 INFO - ada_boost.start() : Prediction completed
2021-11-29 08:58:27,371 INFO - ada_boost.start() : Prediction results: method: AdaBoostClassifier, description: An AdaBoost classifier,  train_time: 2191.9708983898163, predict_time: 25.354084253311157,  true_positive: 212, true_negative: 199, false_positive: 51, false_negative: 38, sensitivity: 0.848,  specificity: 0.796, precision: 0.8060836501901141,  accuracy: 0.822,  error: 0.17800000000000005, f1: 0.8265107212475633, myScore1: 1.3022614784517819, myScore2: 0.0003770628167804161, myScore3: 0.032598721097159084
2021-11-29 08:58:50,244 INFO - statictics.insert() : History send to GIT
2021-11-29 08:58:50,246 INFO - gradient_boost.__init__() : Algorithm initialized
2021-11-29 08:58:50,247 INFO - gradient_boost.start() : Training started
2021-11-29 12:25:36,454 INFO - gradient_boost.start() : Training completed
2021-11-29 12:25:36,455 INFO - gradient_boost.start() : Prediction started
2021-11-29 12:25:37,232 INFO - gradient_boost.start() : Prediction completed
2021-11-29 12:25:38,526 INFO - gradient_boost.start() : Prediction results: method: GradientBoostingClassifier, description: An GradientBoost classifier,  train_time: 12406.206746816635, predict_time: 0.7757887840270996,  true_positive: 218, true_negative: 211, false_positive: 39, false_negative: 32, sensitivity: 0.872,  specificity: 0.844, precision: 0.8482490272373541,  accuracy: 0.858,  error: 0.14200000000000002, f1: 0.8599605522682445, myScore1: 1.4764305309705337, myScore2: 6.931696124513689e-05, myScore3: 1.1084983051755548
2021-11-29 12:25:42,058 INFO - statictics.insert() : History send to GIT
2021-11-29 12:25:49,026 INFO - densenet121.__init__() : Algorithm initialized
2021-11-29 12:25:49,026 INFO - densenet121.start() : Training started
2021-11-29 12:30:38,342 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 12:31:36,939 INFO - densenet121.start() : Training completed
2021-11-29 12:31:36,940 INFO - densenet121.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.7062234282493591, 0.46553468704223633], 'accuracy': [0.75, 0.800000011920929], 'val_loss': [0.7785114645957947, 0.7283728718757629], 'val_accuracy': [0.7099999785423279, 0.6740000247955322]}
2021-11-29 12:31:37,715 INFO - densenet121.start() : Model saved
2021-11-29 12:31:37,715 INFO - densenet121.start() : Prediction started
2021-11-29 12:32:41,787 INFO - densenet121.start() : Prediction completed
2021-11-29 12:32:42,391 INFO - densenet121.start() : Prediction results: method: DenseNet121, description: ,  train_time: 347.9126994609833, predict_time: 64.07139706611633,  true_positive: 109, true_negative: 228, false_positive: 22, false_negative: 141, sensitivity: 0.436,  specificity: 0.912, precision: 0.8320610687022901,  accuracy: 0.674,  error: 0.32599999999999996, f1: 0.5721784776902887, myScore1: 0.8782438119730422, myScore2: 0.0016446035990544685, myScore3: 0.008930326228095952
2021-11-29 12:32:45,414 INFO - statictics.insert() : History send to GIT
2021-11-29 12:32:54,000 INFO - densenet169.__init__() : Algorithm initialized
2021-11-29 12:32:54,000 INFO - densenet169.start() : Training started
2021-11-29 12:38:42,946 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 12:39:53,498 INFO - densenet169.start() : Training completed
2021-11-29 12:39:53,499 INFO - densenet169.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.910382091999054, 0.5565784573554993], 'accuracy': [0.7090517282485962, 0.949999988079071], 'val_loss': [0.8122295141220093, 0.6551235318183899], 'val_accuracy': [0.7160000205039978, 0.7020000219345093]}
2021-11-29 12:39:54,561 INFO - densenet169.start() : Model saved
2021-11-29 12:39:54,562 INFO - densenet169.start() : Prediction started
2021-11-29 12:41:11,065 INFO - densenet169.start() : Prediction completed
2021-11-29 12:41:11,631 INFO - densenet169.start() : Prediction results: method: DenseNet169, description: ,  train_time: 419.4979567527771, predict_time: 76.5026695728302,  true_positive: 166, true_negative: 185, false_positive: 65, false_negative: 84, sensitivity: 0.664,  specificity: 0.74, precision: 0.7186147186147186,  accuracy: 0.702,  error: 0.29800000000000004, f1: 0.6902286902286903, myScore1: 0.9631462867744747, myScore2: 0.0016453684198406311, myScore3: 0.00902228241292411
2021-11-29 12:41:14,751 INFO - statictics.insert() : History send to GIT
2021-11-29 12:41:22,629 INFO - densenet201.__init__() : Algorithm initialized
2021-11-29 12:41:22,629 INFO - densenet201.start() : Training started
2021-11-29 12:48:52,094 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 12:50:22,524 INFO - densenet201.start() : Training completed
2021-11-29 12:50:22,525 INFO - densenet201.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.543037474155426, 0.23207879066467285], 'accuracy': [0.756465494632721, 0.8999999761581421], 'val_loss': [0.623344361782074, 0.6215260028839111], 'val_accuracy': [0.7139999866485596, 0.7139999866485596]}
2021-11-29 12:50:23,852 INFO - densenet201.start() : Model saved
2021-11-29 12:50:23,852 INFO - densenet201.start() : Prediction started
2021-11-29 12:52:02,756 INFO - densenet201.start() : Prediction completed
2021-11-29 12:52:03,369 INFO - densenet201.start() : Prediction results: method: DenseNet201, description: ,  train_time: 539.8939516544342, predict_time: 98.90365529060364,  true_positive: 230, true_negative: 127, false_positive: 123, false_negative: 20, sensitivity: 0.92,  specificity: 0.508, precision: 0.6515580736543909,  accuracy: 0.714,  error: 0.28600000000000003, f1: 0.7628524046434494, myScore1: 1.0104323593375135, myScore2: 0.001412967124943312, myScore3: 0.0077130860573555
2021-11-29 12:52:06,564 INFO - statictics.insert() : History send to GIT
2021-11-29 12:52:09,753 INFO - efficientnetb0.__init__() : Algorithm initialized
2021-11-29 12:52:09,754 INFO - efficientnetb0.start() : Training started
2021-11-29 12:54:24,171 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 12:54:50,445 INFO - efficientnetb0.start() : Training completed
2021-11-29 12:54:50,446 INFO - efficientnetb0.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3001098334789276, 0.28582432866096497], 'accuracy': [0.8776939511299133, 0.800000011920929], 'val_loss': [0.36763203144073486, 0.3727169930934906], 'val_accuracy': [0.8320000171661377, 0.8320000171661377]}
2021-11-29 12:54:52,392 INFO - efficientnetb0.start() : Model saved
2021-11-29 12:54:52,393 INFO - efficientnetb0.start() : Prediction started
2021-11-29 12:55:23,765 INFO - efficientnetb0.start() : Prediction completed
2021-11-29 12:55:24,345 INFO - efficientnetb0.start() : Prediction results: method: EfficientNetB0, description: ,  train_time: 160.69119358062744, predict_time: 31.371495485305786,  true_positive: 220, true_negative: 196, false_positive: 54, false_negative: 30, sensitivity: 0.88,  specificity: 0.784, precision: 0.8029197080291971,  accuracy: 0.832,  error: 0.16800000000000004, f1: 0.8396946564885496, myScore1: 1.3449773942852896, myScore2: 0.005225517576775167, myScore3: 0.02676616602105747
2021-11-29 12:55:27,492 INFO - statictics.insert() : History send to GIT
2021-11-29 12:55:31,942 INFO - efficientnetb1.__init__() : Algorithm initialized
2021-11-29 12:55:31,943 INFO - efficientnetb1.start() : Training started
2021-11-29 12:58:41,664 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 12:59:18,371 INFO - efficientnetb1.start() : Training completed
2021-11-29 12:59:18,371 INFO - efficientnetb1.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.31598472595214844, 0.2265585958957672], 'accuracy': [0.8669180870056152, 0.949999988079071], 'val_loss': [0.38053098320961, 0.35941874980926514], 'val_accuracy': [0.8379999995231628, 0.8420000076293945]}
2021-11-29 12:59:18,936 INFO - efficientnetb1.start() : Model saved
2021-11-29 12:59:18,937 INFO - efficientnetb1.start() : Prediction started
2021-11-29 13:00:00,997 INFO - efficientnetb1.start() : Prediction completed
2021-11-29 13:00:01,592 INFO - efficientnetb1.start() : Prediction results: method: EfficientNetB1, description: ,  train_time: 226.4276990890503, predict_time: 42.06025409698486,  true_positive: 200, true_negative: 221, false_positive: 29, false_negative: 50, sensitivity: 0.8,  specificity: 0.884, precision: 0.8733624454148472,  accuracy: 0.842,  error: 0.15800000000000003, f1: 0.8350730688935283, myScore1: 1.390384171393312, myScore2: 0.003688034071154465, myScore3: 0.019854208844482264
2021-11-29 13:00:06,752 INFO - statictics.insert() : History send to GIT
2021-11-29 13:00:11,303 INFO - efficientnetb2.__init__() : Algorithm initialized
2021-11-29 13:00:11,304 INFO - efficientnetb2.start() : Training started
2021-11-29 13:03:31,495 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 13:04:12,060 INFO - efficientnetb2.start() : Training completed
2021-11-29 13:04:12,064 INFO - efficientnetb2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.336033433675766, 0.24281707406044006], 'accuracy': [0.8572198152542114, 0.8999999761581421], 'val_loss': [0.37948641180992126, 0.36919113993644714], 'val_accuracy': [0.8299999833106995, 0.8360000252723694]}
2021-11-29 13:04:13,544 INFO - efficientnetb2.start() : Model saved
2021-11-29 13:04:13,545 INFO - efficientnetb2.start() : Prediction started
2021-11-29 13:04:57,814 INFO - efficientnetb2.start() : Prediction completed
2021-11-29 13:04:58,431 INFO - efficientnetb2.start() : Prediction results: method: EfficientNetB2, description: ,  train_time: 240.75616216659546, predict_time: 44.26878261566162,  true_positive: 226, true_negative: 192, false_positive: 58, false_negative: 24, sensitivity: 0.904,  specificity: 0.768, precision: 0.795774647887324,  accuracy: 0.836,  error: 0.16400000000000003, f1: 0.8464419475655431, myScore1: 1.3633545361324795, myScore2: 0.003515764414702012, myScore3: 0.019120515576727986
2021-11-29 13:05:01,504 INFO - statictics.insert() : History send to GIT
2021-11-29 13:05:07,783 INFO - efficientnetb3.__init__() : Algorithm initialized
2021-11-29 13:05:07,783 INFO - efficientnetb3.start() : Training started
2021-11-29 13:09:37,258 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 13:10:30,161 INFO - efficientnetb3.start() : Training completed
2021-11-29 13:10:30,162 INFO - efficientnetb3.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3236038386821747, 0.18570414185523987], 'accuracy': [0.859375, 0.949999988079071], 'val_loss': [0.3861185908317566, 0.42648881673812866], 'val_accuracy': [0.8240000009536743, 0.8040000200271606]}
2021-11-29 13:10:30,856 INFO - efficientnetb3.start() : Model saved
2021-11-29 13:10:30,857 INFO - efficientnetb3.start() : Prediction started
2021-11-29 13:11:31,164 INFO - efficientnetb3.start() : Prediction completed
2021-11-29 13:11:31,778 INFO - efficientnetb3.start() : Prediction results: method: EfficientNetB3, description: ,  train_time: 322.3772683143616, predict_time: 60.30674457550049,  true_positive: 235, true_negative: 167, false_positive: 83, false_negative: 15, sensitivity: 0.94,  specificity: 0.668, precision: 0.7389937106918238,  accuracy: 0.804,  error: 0.19599999999999995, f1: 0.8274647887323943, myScore1: 1.239035847068033, myScore2: 0.002566759105128665, myScore3: 0.013720932783835764
2021-11-29 13:11:35,878 INFO - statictics.insert() : History send to GIT
2021-11-29 13:11:42,590 INFO - efficientnetb4.__init__() : Algorithm initialized
2021-11-29 13:11:42,591 INFO - efficientnetb4.start() : Training started
2021-11-29 13:17:44,841 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 13:18:56,366 INFO - efficientnetb4.start() : Training completed
2021-11-29 13:18:56,366 INFO - efficientnetb4.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.31374645233154297, 0.298443466424942], 'accuracy': [0.8690732717514038, 0.8500000238418579], 'val_loss': [0.33581268787384033, 0.3570448160171509], 'val_accuracy': [0.8519999980926514, 0.8399999737739563]}
2021-11-29 13:18:57,277 INFO - efficientnetb4.start() : Model saved
2021-11-29 13:18:57,277 INFO - efficientnetb4.start() : Prediction started
2021-11-29 13:20:16,632 INFO - efficientnetb4.start() : Prediction completed
2021-11-29 13:20:17,254 INFO - efficientnetb4.start() : Prediction results: method: EfficientNetB4, description: ,  train_time: 433.7749168872833, predict_time: 79.35364723205566,  true_positive: 228, true_negative: 192, false_positive: 58, false_negative: 22, sensitivity: 0.912,  specificity: 0.768, precision: 0.7972027972027972,  accuracy: 0.84,  error: 0.16000000000000003, f1: 0.8507462686567164, myScore1: 1.3820934140486378, myScore2: 0.001961262017549492, myScore3: 0.010720947282597608
2021-11-29 13:20:20,429 INFO - statictics.insert() : History send to GIT
2021-11-29 13:20:28,994 INFO - efficientnetb5.__init__() : Algorithm initialized
2021-11-29 13:20:28,995 INFO - efficientnetb5.start() : Training started
2021-11-29 13:28:53,202 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 13:30:41,218 INFO - efficientnetb5.start() : Training completed
2021-11-29 13:30:41,218 INFO - efficientnetb5.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3057838976383209, 0.16130533814430237], 'accuracy': [0.876616358757019, 0.949999988079071], 'val_loss': [0.3780408501625061, 0.3813251852989197], 'val_accuracy': [0.8199999928474426, 0.8180000185966492]}
2021-11-29 13:30:42,590 INFO - efficientnetb5.start() : Model saved
2021-11-29 13:30:42,590 INFO - efficientnetb5.start() : Prediction started
2021-11-29 13:33:52,156 INFO - efficientnetb5.start() : Prediction completed
2021-11-29 13:33:53,782 INFO - efficientnetb5.start() : Prediction results: method: EfficientNetB5, description: ,  train_time: 612.223023891449, predict_time: 189.56523990631104,  true_positive: 212, true_negative: 197, false_positive: 53, false_negative: 38, sensitivity: 0.848,  specificity: 0.788, precision: 0.8,  accuracy: 0.818,  error: 0.18200000000000005, f1: 0.8233009708737864, myScore1: 1.2865010348874426, myScore2: 0.0013447729646635486, myScore3: 0.004343100936019109
2021-11-29 13:34:01,038 INFO - statictics.insert() : History send to GIT
2021-11-29 13:34:49,477 INFO - efficientnetb6.__init__() : Algorithm initialized
2021-11-29 13:34:49,478 INFO - efficientnetb6.start() : Training started
2021-11-29 13:51:56,806 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 13:54:10,288 INFO - efficientnetb6.start() : Training completed
2021-11-29 13:54:10,288 INFO - efficientnetb6.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.33451271057128906, 0.3171718716621399], 'accuracy': [0.8480603694915771, 0.8999999761581421], 'val_loss': [0.4001811146736145, 0.3912849426269531], 'val_accuracy': [0.8159999847412109, 0.8320000171661377]}
2021-11-29 13:54:11,735 INFO - efficientnetb6.start() : Model saved
2021-11-29 13:54:11,736 INFO - efficientnetb6.start() : Prediction started
2021-11-29 13:56:38,682 INFO - efficientnetb6.start() : Prediction completed
2021-11-29 13:56:39,296 INFO - efficientnetb6.start() : Prediction results: method: EfficientNetB6, description: ,  train_time: 1160.8096449375153, predict_time: 146.94618391990662,  true_positive: 206, true_negative: 210, false_positive: 40, false_negative: 44, sensitivity: 0.824,  specificity: 0.84, precision: 0.8373983739837398,  accuracy: 0.832,  error: 0.16800000000000004, f1: 0.8306451612903225, myScore1: 1.3439005132816304, myScore2: 0.0007155739659063868, myScore3: 0.005652716791496047
2021-11-29 13:56:42,599 INFO - statictics.insert() : History send to GIT
2021-11-29 13:56:56,020 INFO - efficientnetb7.__init__() : Algorithm initialized
2021-11-29 13:56:56,020 INFO - efficientnetb7.start() : Training started
2021-11-29 14:18:09,685 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:22:22,016 INFO - efficientnetb7.start() : Training completed
2021-11-29 14:22:22,017 INFO - efficientnetb7.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3017895221710205, 0.1638728827238083], 'accuracy': [0.8739224076271057, 0.949999988079071], 'val_loss': [0.3689403831958771, 0.38981547951698303], 'val_accuracy': [0.8360000252723694, 0.8339999914169312]}
2021-11-29 14:22:24,365 INFO - efficientnetb7.start() : Model saved
2021-11-29 14:22:24,365 INFO - efficientnetb7.start() : Prediction started
2021-11-29 14:26:35,895 INFO - efficientnetb7.start() : Prediction completed
2021-11-29 14:26:37,032 INFO - efficientnetb7.start() : Prediction results: method: EfficientNetB7, description: ,  train_time: 1525.994723558426, predict_time: 251.52960920333862,  true_positive: 184, true_negative: 233, false_positive: 17, false_negative: 66, sensitivity: 0.736,  specificity: 0.932, precision: 0.9154228855721394,  accuracy: 0.834,  error: 0.16600000000000004, f1: 0.8159645232815964, myScore1: 1.352134188752229, myScore2: 0.0005347099244084349, myScore3: 0.003244009823996363
2021-11-29 14:26:42,051 INFO - statictics.insert() : History send to GIT
2021-11-29 14:26:58,278 INFO - inceptionresnetv2.__init__() : Algorithm initialized
2021-11-29 14:26:58,278 INFO - inceptionresnetv2.start() : Training started
2021-11-29 14:35:36,270 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:37:13,403 INFO - inceptionresnetv2.start() : Training completed
2021-11-29 14:37:13,403 INFO - inceptionresnetv2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [154.69529724121094, 180.75515747070312], 'accuracy': [0.49946120381355286, 0.44999998807907104], 'val_loss': [202.78526306152344, 10.759347915649414], 'val_accuracy': [0.5, 0.6439999938011169]}
2021-11-29 14:37:40,233 INFO - inceptionresnetv2.start() : Model saved
2021-11-29 14:37:40,233 INFO - inceptionresnetv2.start() : Prediction started
2021-11-29 14:39:23,600 INFO - inceptionresnetv2.start() : Prediction completed
2021-11-29 14:39:24,332 INFO - inceptionresnetv2.start() : Prediction results: method: InceptionResNetV2, description: ,  train_time: 615.1250183582306, predict_time: 103.36595106124878,  true_positive: 173, true_negative: 149, false_positive: 101, false_negative: 77, sensitivity: 0.692,  specificity: 0.596, precision: 0.6313868613138686,  accuracy: 0.644,  error: 0.356, f1: 0.6603053435114503, myScore1: 0.8673902342916064, myScore2: 0.0010734490124849842, myScore3: 0.0063880352933645525
2021-11-29 14:39:27,797 INFO - statictics.insert() : History send to GIT
2021-11-29 14:39:32,293 INFO - inceptionv3.__init__() : Algorithm initialized
2021-11-29 14:39:32,293 INFO - inceptionv3.start() : Training started
2021-11-29 14:42:49,936 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:43:29,975 INFO - inceptionv3.start() : Training completed
2021-11-29 14:43:29,976 INFO - inceptionv3.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [6.044799327850342, 6.278567314147949], 'accuracy': [0.6767241358757019, 0.5], 'val_loss': [6.997217655181885, 11.806242942810059], 'val_accuracy': [0.5920000076293945, 0.5379999876022339]}
2021-11-29 14:43:30,772 INFO - inceptionv3.start() : Model saved
2021-11-29 14:43:30,772 INFO - inceptionv3.start() : Prediction started
2021-11-29 14:44:18,032 INFO - inceptionv3.start() : Prediction completed
2021-11-29 14:44:18,628 INFO - inceptionv3.start() : Prediction results: method: InceptionV3, description: ,  train_time: 237.6812241077423, predict_time: 47.259721755981445,  true_positive: 247, true_negative: 22, false_positive: 228, false_negative: 3, sensitivity: 0.988,  specificity: 0.088, precision: 0.52,  accuracy: 0.538,  error: 0.46199999999999997, f1: 0.6813793103448276, myScore1: 0.7705398716226303, myScore2: 0.002866778025494998, myScore3: 0.014417759669915715
2021-11-29 14:44:21,979 INFO - statictics.insert() : History send to GIT
2021-11-29 14:44:23,193 INFO - mobilenet.__init__() : Algorithm initialized
2021-11-29 14:44:23,194 INFO - mobilenet.start() : Training started
2021-11-29 14:45:47,587 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:46:04,666 INFO - mobilenet.start() : Training completed
2021-11-29 14:46:04,667 INFO - mobilenet.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.41934898495674133, 0.3722535967826843], 'accuracy': [0.8184267282485962, 0.8500000238418579], 'val_loss': [0.5544435381889343, 0.5594263672828674], 'val_accuracy': [0.734000027179718, 0.7419999837875366]}
2021-11-29 14:46:04,886 INFO - mobilenet.start() : Model saved
2021-11-29 14:46:04,886 INFO - mobilenet.start() : Prediction started
2021-11-29 14:46:23,792 INFO - mobilenet.start() : Prediction completed
2021-11-29 14:46:24,558 INFO - mobilenet.start() : Prediction results: method: MobileNet, description: ,  train_time: 101.47210097312927, predict_time: 18.90532398223877,  true_positive: 208, true_negative: 163, false_positive: 87, false_negative: 42, sensitivity: 0.832,  specificity: 0.652, precision: 0.7050847457627119,  accuracy: 0.742,  error: 0.258, f1: 0.763302752293578, myScore1: 1.0623567499478663, myScore2: 0.007522291792260293, myScore3: 0.04037501568397812
2021-11-29 14:46:27,864 INFO - statictics.insert() : History send to GIT
2021-11-29 14:46:30,015 INFO - mobilenetv2.__init__() : Algorithm initialized
2021-11-29 14:46:30,016 INFO - mobilenetv2.start() : Training started
2021-11-29 14:47:58,330 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:48:15,392 INFO - mobilenetv2.start() : Training completed
2021-11-29 14:48:15,392 INFO - mobilenetv2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3885039687156677, 0.453068345785141], 'accuracy': [0.8259698152542114, 0.75], 'val_loss': [0.4963206946849823, 0.5905555486679077], 'val_accuracy': [0.7260000109672546, 0.7099999785423279]}
2021-11-29 14:48:15,716 INFO - mobilenetv2.start() : Model saved
2021-11-29 14:48:15,716 INFO - mobilenetv2.start() : Prediction started
2021-11-29 14:48:35,565 INFO - mobilenetv2.start() : Prediction completed
2021-11-29 14:48:37,660 INFO - mobilenetv2.start() : Prediction results: method: MobileNetV2, description: ,  train_time: 105.37607789039612, predict_time: 19.84855628013611,  true_positive: 237, true_negative: 118, false_positive: 132, false_negative: 13, sensitivity: 0.948,  specificity: 0.472, precision: 0.6422764227642277,  accuracy: 0.71,  error: 0.29000000000000004, f1: 0.7657512116316639, myScore1: 1.0049308342991512, myScore2: 0.007266841079700631, myScore3: 0.03857969319400861
2021-11-29 14:48:41,121 INFO - statictics.insert() : History send to GIT
2021-11-29 14:48:44,393 INFO - mobilenetv3large.__init__() : Algorithm initialized
2021-11-29 14:48:44,393 INFO - mobilenetv3large.start() : Training started
2021-11-29 14:50:10,000 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:50:40,141 INFO - mobilenetv3large.start() : Training completed
2021-11-29 14:50:40,142 INFO - mobilenetv3large.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.4216530919075012, 0.35725492238998413], 'accuracy': [0.8098060488700867, 0.8500000238418579], 'val_loss': [0.3947562873363495, 0.41133856773376465], 'val_accuracy': [0.8119999766349792, 0.8019999861717224]}
2021-11-29 14:50:41,342 INFO - mobilenetv3large.start() : Model saved
2021-11-29 14:50:41,343 INFO - mobilenetv3large.start() : Prediction started
2021-11-29 14:51:15,225 INFO - mobilenetv3large.start() : Prediction completed
2021-11-29 14:51:16,219 INFO - mobilenetv3large.start() : Prediction results: method: MobileNetV3Large, description: ,  train_time: 115.74796843528748, predict_time: 33.88229441642761,  true_positive: 226, true_negative: 175, false_positive: 75, false_negative: 24, sensitivity: 0.904,  specificity: 0.7, precision: 0.7508305647840532,  accuracy: 0.802,  error: 0.19799999999999995, f1: 0.8203266787658803, myScore1: 1.2308969009118507, myScore2: 0.007087179929421479, myScore3: 0.02421107226930152
2021-11-29 14:51:20,705 INFO - statictics.insert() : History send to GIT
2021-11-29 14:51:24,203 INFO - mobilenetv3small.__init__() : Algorithm initialized
2021-11-29 14:51:24,204 INFO - mobilenetv3small.start() : Training started
2021-11-29 14:52:19,385 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 14:52:27,542 INFO - mobilenetv3small.start() : Training completed
2021-11-29 14:52:27,543 INFO - mobilenetv3small.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3943934738636017, 0.24906177818775177], 'accuracy': [0.8286637663841248, 0.949999988079071], 'val_loss': [0.42091313004493713, 0.41638416051864624], 'val_accuracy': [0.8199999928474426, 0.7900000214576721]}
2021-11-29 14:52:28,146 INFO - mobilenetv3small.start() : Model saved
2021-11-29 14:52:28,146 INFO - mobilenetv3small.start() : Prediction started
2021-11-29 14:52:39,016 INFO - mobilenetv3small.start() : Prediction completed
2021-11-29 14:52:39,745 INFO - mobilenetv3small.start() : Prediction results: method: MobileNetV3Small, description: ,  train_time: 63.33831238746643, predict_time: 10.869519472122192,  true_positive: 225, true_negative: 170, false_positive: 80, false_negative: 25, sensitivity: 0.9,  specificity: 0.68, precision: 0.7377049180327869,  accuracy: 0.79,  error: 0.20999999999999996, f1: 0.8108108108108109, myScore1: 1.1923663733991605, myScore2: 0.012801269567315728, myScore3: 0.0745949085320978
2021-11-29 14:52:43,469 INFO - statictics.insert() : History send to GIT
2021-11-29 14:52:50,921 INFO - resnet101.__init__() : Algorithm initialized
2021-11-29 14:52:50,922 INFO - resnet101.start() : Training started
2021-11-29 15:05:39,414 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 15:07:40,232 INFO - resnet101.start() : Training completed
2021-11-29 15:07:40,232 INFO - resnet101.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.3651774227619171, 0.15605533123016357], 'accuracy': [0.8394396305084229, 0.949999988079071], 'val_loss': [0.3494885563850403, 0.39047127962112427], 'val_accuracy': [0.843999981880188, 0.8220000267028809]}
2021-11-29 15:07:41,539 INFO - resnet101.start() : Model saved
2021-11-29 15:07:41,540 INFO - resnet101.start() : Prediction started
2021-11-29 15:09:47,696 INFO - resnet101.start() : Prediction completed
2021-11-29 15:09:48,494 INFO - resnet101.start() : Prediction results: method: ResNet101, description: ,  train_time: 889.3101739883423, predict_time: 126.15647625923157,  true_positive: 177, true_negative: 234, false_positive: 16, false_negative: 73, sensitivity: 0.708,  specificity: 0.936, precision: 0.917098445595855,  accuracy: 0.822,  error: 0.17800000000000005, f1: 0.7990970654627539, myScore1: 1.299656130099951, myScore2: 0.0008985583307553941, myScore3: 0.00633417394934792
2021-11-29 15:09:52,676 INFO - statictics.insert() : History send to GIT
2021-11-29 15:09:58,959 INFO - resnet101v2.__init__() : Algorithm initialized
2021-11-29 15:09:58,960 INFO - resnet101v2.start() : Training started
2021-11-29 15:18:45,857 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 15:20:38,872 INFO - resnet101v2.start() : Training completed
2021-11-29 15:20:38,873 INFO - resnet101v2.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [50.912322998046875, 14.146100044250488], 'accuracy': [0.5269396305084229, 0.6000000238418579], 'val_loss': [25.91822052001953, 32.681304931640625], 'val_accuracy': [0.5220000147819519, 0.5099999904632568]}
2021-11-29 15:20:40,363 INFO - resnet101v2.start() : Model saved
2021-11-29 15:20:40,363 INFO - resnet101v2.start() : Prediction started
2021-11-29 15:22:37,624 INFO - resnet101v2.start() : Prediction completed
2021-11-29 15:22:38,250 INFO - resnet101v2.start() : Prediction results: method: ResNet101V2, description: ,  train_time: 639.9117338657379, predict_time: 117.2603747844696,  true_positive: 5, true_negative: 250, false_positive: 0, false_negative: 245, sensitivity: 0.02,  specificity: 1.0, precision: 1.0,  accuracy: 0.51,  error: 0.49, f1: 0.0392156862745098, myScore1: 0.4766894757903161, myScore2: 6.128296169474176e-05, myScore3: 0.0003344325510351658
2021-11-29 15:22:42,006 INFO - statictics.insert() : History send to GIT
2021-11-29 15:22:52,622 INFO - resnet152.__init__() : Algorithm initialized
2021-11-29 15:22:52,622 INFO - resnet152.start() : Training started
2021-11-29 15:35:09,322 WARNING - data_adapter.catch_stop_iteration() : Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 1856 batches). You may need to use the repeat() function when building your dataset.
2021-11-29 15:37:30,103 INFO - resnet152.start() : Training completed
2021-11-29 15:37:30,104 INFO - resnet152.start() : Training results: {'verbose': 1, 'epochs': 32, 'steps': 58}{'loss': [0.31410443782806396, 0.12500742077827454], 'accuracy': [0.8626077771186829, 0.949999988079071], 'val_loss': [0.33360183238983154, 0.35440880060195923], 'val_accuracy': [0.8619999885559082, 0.8519999980926514]}
2021-11-29 15:37:31,899 INFO - resnet152.start() : Model saved
2021-11-29 15:37:31,900 INFO - resnet152.start() : Prediction started
2021-11-29 15:39:57,918 INFO - resnet152.start() : Prediction completed
2021-11-29 15:39:58,514 INFO - resnet152.start() : Prediction results: method: ResNet152, description: ,  train_time: 877.4809191226959, predict_time: 146.0180962085724,  true_positive: 196, true_negative: 230, false_positive: 20, false_negative: 54, sensitivity: 0.784,  specificity: 0.92, precision: 0.9074074074074074,  accuracy: 0.852,  error: 0.14800000000000002, f1: 0.8412017167381974, myScore1: 1.442617274785515, myScore2: 0.0009586552805948529, myScore3: 0.005760941544783765
